Function convertMask2prefix(var msk:OneInternetAddress):LongInt;
Label f1;
Var
  buf:array[1..1] of byte absolute msk;
  i,o,p:LongInt;
Begin;
p:=0;
o:=0;
for i:=1 to 128 do begin;
  o:=o shr 1;
  if (o=0) then begin; o:=$80;inc(p); end;
  if (buf[p] and o=0) then goto f1;
  end;
i:=129;
f1:
convertMask2prefix:=i-1;
End;

Procedure convertPrefix2mask(var prf:LongInt;var msk:OneInternetAddress);
Var
  buf:array[1..1] of byte absolute msk;
  i,o,p:LongInt;
Begin;
fillchar(msk,sizeof(msk),0);
p:=0;
o:=0;
for i:=1 to prf do begin;
  o:=o shr 1;
  if (o=0) then begin; o:=$80;inc(p); end;
  inc(buf[p],o);
  end;
End;

Function AddOneIface(pid:LongInt;nam:String):Boolean;
Label f1,f2;
Var
  d:OneIfaceDescriptorRec;
  i,o,p:LongInt;
  a:String;
Begin;
AddOneIface:=True;
if (IfacesNum>=MaxIfaces) then exit;
fillchar(d,sizeof(d),0);
d.name:=nam;
d.pid:=pid;
relequish;
if (pipeLineCreate(o,pid,4096,true)<>0) then exit;
d.pipe:=o;
a:='param6--';
pipeLineSend(o,a[1],length(a));
p:=0;
f1:
relequish;
inc(p);
if (p>16) then begin;
  pipeLineClose(o);
  exit;
  end;
i:=250;
if (pipeLineRecv(o,a[1],i)<>0) then i:=0;
if (i<1) then goto f1;
pipeLineClose(o);
a[0]:=chr(i);
if (copy(a,1,6)<>'param6') then exit;
a:=copy(a,7,255);
d.macSrcT:=ord(a[1]);
d.macTrgT:=ord(a[2]);
d.macSize:=ord(a[3]);
move(a[4],d.macAddr,d.macSize);
a:=copy(a,d.macSize+4,255);
move(a[1],d.linkiIP,sizeof(d.linkiIP));
if EqualIPaddr(d.linkiIP,UndefAddr) then exit;
move(a[17],d.localIP,sizeof(d.linkiIP));
move(a[33],d.GateWay,sizeof(d.GateWay));
move(a[49],d.NetMask,sizeof(d.NetMask));
d.mcastIP.p1:=d.LocalIP.p1 and d.NetMask.p1;
d.mcastIP.p2:=d.LocalIP.p2 and d.NetMask.p2;
d.mcastIP.p3:=d.LocalIP.p3 and d.NetMask.p3;
d.mcastIP.p4:=d.LocalIP.p4 and d.NetMask.p4;
d.bcastIP.p1:=(not d.NetMask.p1) or d.mcastIP.p1;
d.bcastIP.p2:=(not d.NetMask.p2) or d.mcastIP.p2;
d.bcastIP.p3:=(not d.NetMask.p3) or d.mcastIP.p3;
d.bcastIP.p4:=(not d.NetMask.p4) or d.mcastIP.p4;
d.prfxLen:=convertMask2prefix(d.NetMask);
relequish;
if (pipeLineCreate(o,pid,65536,true)<>0) then exit;
d.pipe:=o;
a:='data6---';
pipeLineSend(o,a[1],length(a));
p:=0;
f2:
relequish;
inc(p);
if (p>16) then begin; pipeLineClose(o);exit; end;
i:=250;
if (pipeLineRecv(o,a[1],i)<>0) then i:=0;
if (i<1) then goto f2;
a[0]:=chr(i);
if (a<>'data6') then begin; pipeLineClose(o);exit; end;
inc(IfacesNum);
IfacesDat[IfacesNum]:=d;
if (IfacesNum<=1) then LocalAddr:=d.LocalIP;
AddOneIface:=False;
End;

Function DelOneIface(num:LongInt):Boolean;
Var i:LongInt;
Begin;
DelOneIface:=True;
if (num<1) or (num>IfacesNum) then exit;
pipeLineClose(IfacesDat[num].pipe);
for i:=num+1 to IfacesNum do IfacesDat[i-1]:=IfacesDat[i];
dec(IfacesNum);
if (num=1) then LocalAddr:=IfacesDat[1].LocalIP;
if (IfacesNum<1) then LocalAddr:=LocalHost;
DelOneIface:=False;
End;

Function AddOneRoute(sq:LongInt;si,sm,ti,tm,fi:OneInternetAddress):Boolean;
Var
  i:LongInt;
  d:OneRouteDescriptorRec;
Begin;
AddOneRoute:=True;
if (RoutesNum>=MaxRoutes) then exit;
if (sq<1) or (sq-1>RoutesNum) then exit;
si.p1:=si.p1 and sm.p1;
si.p2:=si.p2 and sm.p2;
si.p3:=si.p3 and sm.p3;
si.p4:=si.p4 and sm.p4;
ti.p1:=ti.p1 and tm.p1;
ti.p2:=ti.p2 and tm.p2;
ti.p3:=ti.p3 and tm.p3;
ti.p4:=ti.p4 and tm.p4;
d.SrcIP:=si;
d.SrcMK:=sm;
d.TrgIP:=ti;
d.TrgMK:=tm;
d.Final:=fi;
inc(RoutesNum);
for i:=RoutesNum downto sq do RoutesDat[i]:=RoutesDat[i-1];
RoutesDat[sq]:=d;
AddOneRoute:=False;
End;

Function DelOneRoute(num:LongInt):Boolean;
Var i:LongInt;
Begin;
DelOneRoute:=True;
if (num<1) or (num>RoutesNum) then exit;
for i:=num+1 to RoutesNum do RoutesDat[i-1]:=RoutesDat[i];
dec(RoutesNum);
DelOneRoute:=False;
End;
