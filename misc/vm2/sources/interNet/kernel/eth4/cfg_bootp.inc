Procedure Configure_bootp;
Label f1,f2;
Var
  buf:array[1..1024] of byte;
  bootp:OneBOOTPheaderRecord absolute buf;
  adr:OneEtherAddrRec;
  i,o,p,q,r,s,t:LongInt;
  retry:LongInt;
  a:String;
Begin;
confgMod:=1;
localNet:=0;
gatwyNet:=0;
ntmskNet:=0;
bootpNet:=$ffffffff;
dnsServs:='';
retry:=0;
f1:
inc(retry);
if (retry>64) then immErr('too much try!');
fillchar(buf,sizeof(buf),0);
bootp.op:=Op_BOOTP_req;
bootp.htype:=1;
bootp.hlen:=sizeof(localEth);
bootp.hops:=0;
bootp.xid:=PacketSequences;
bootp.secs:=PacketSequences;
bootp.flags:=0;
bootp.ciadr:=localNet;
bootp.siadr:=bootpNet;
move(localEth,bootp.chadr,sizeof(localEth));
WriteLongMSB(bootp.magic,dhcpMagicCookie);
i:=0;
bootpAddOption(bootp,i,255,'');
sendUDPpacket(broadEth,localNet,bootpNet,UDPport_BOOTPc,UDPport_BOOTPs,sizeof(bootp)+60,bootp);
BugOS_KernelUptime(i,t,o);
WriteLn('BOOTP sent request');
f2:
relequish;
if (getTimePast(t)>5) then goto f1;
receiveUDPpacket(adr,p,o,i,q,s,buf);
if (s<sizeof(bootp)) then goto f2;
if (q<>UDPport_BOOTPc) then goto f2;
if (bootp.op<>Op_BOOTP_rep) then goto f2;
if (ReadLongMSB(bootp.magic)<>dhcpMagicCookie) then goto f2;
WriteLn('BOOTP got reply from '+convEtherAddr(adr));
bootpNet:=p;
localNet:=bootp.yiadr;
gatwyNet:=bootp.siadr;
parseBootpOptions(buf,i,a);
End;
