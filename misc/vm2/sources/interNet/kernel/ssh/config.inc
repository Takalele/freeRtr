Procedure ReadUpConfig(a:String);
Var t:xtText;

function gnl:string;
var
  i:longint;
  a:String;
begin;
a:=xtReadLn(t,255);
i:=pos(';',a);
if (i>0) then a:=copy(a,1,i-1);
a:=' '+a+' ';
kicserel('  ',' ',a);
a:=copy(a,2,length(a)-2);
gnl:=a;
end;

Procedure OrNumber(var i:LongInt;n:LongInt);
Begin;
i:=i or n;
End;


Var
  f:xFile;
  b:String;
  i:LongInt;
Begin;
if (xtOpen(t,a,true)<>0) then immErr('error opening config!');
serverPort:=BVal(gnl);
CryptoGetCipherList(hostKeyDSS,i);
CipherAlgoList[1].a:=CryptoFindOneAlgo(hostKeyDSS,i,'aes-cbc');
CipherAlgoList[2].a:=CryptoFindOneAlgo(hostKeyDSS,i,'twofish-cbc');
CipherAlgoList[3].a:=CryptoFindOneAlgo(hostKeyDSS,i,'blowfish-cbc');
CipherAlgoList[4].a:=CryptoFindOneAlgo(hostKeyDSS,i,'3des-cbc');
CipherAlgoList[5].a:=CryptoFindOneAlgo(hostKeyDSS,i,'rc6-cbc');
CipherAlgoList[6].a:=CryptoFindOneAlgo(hostKeyDSS,i,'rc5-cbc');
CipherAlgoList[7].a:=CryptoFindOneAlgo(hostKeyDSS,i,'rc2-cbc');
CryptoGetHasherList(hostKeyDSS,i);
sha1algoNum:=CryptoFindOneAlgo(hostKeyDSS,i,'sha1');
md5algoNum:=CryptoFindOneAlgo(hostKeyDSS,i,'md5');
HasherAlgoList[1].a:=CryptoFindOneAlgo(hostKeyDSS,i,'md5');
HasherAlgoList[2].a:=CryptoFindOneAlgo(hostKeyDSS,i,'sha1');
HasherAlgoList[3].a:=CryptoFindOneAlgo(hostKeyDSS,i,'rmd160');
b:=gnl;
PreferredHashers:='';
while (b<>'') do begin;
  i:=bval(copy(b,1,1));
  b:=copy(b,2,255);
  if (i<1) then continue;
  if (i>HasherAlgoMax) then continue;
  PreferredHashers:=PreferredHashers+chr(i);
  end;
b:=gnl;
PreferredCiphers:='';
while (b<>'') do begin;
  i:=bval(copy(b,1,1));
  b:=copy(b,2,255);
  if (i<1) then continue;
  if (i>CipherAlgoMax) then continue;
  PreferredCiphers:=PreferredCiphers+chr(i);
  end;
diffieHellmanGroups:=gnl;
diffieHellmanDiv:=BVal(gnl);
diffieHellmanMin:=BVal(gnl);
diffieHellmanMax:=BVal(gnl);
a:=gnl;
fillchar(hostKeyDSS,sizeof(hostKeyDSS),0);
if (xOpen(f,a,xGenFilMod_r)=0) then begin;
  xBlockRead(f,hostKeyDSS,sizeof(hostKeyDSS));
  xClose(f);
  end;
a:=gnl;
fillchar(hostKeyRSA,sizeof(hostKeyRSA),0);
if (xOpen(f,a,xGenFilMod_r)=0) then begin;
  xBlockRead(f,hostKeyRSA,sizeof(hostKeyRSA));
  xClose(f);
  end;
ListenerNum:=0;
while not xtEOF(t) do begin;
  b:=gnl;
  i:=BVAl(getWord(b));
  a:=getWord(b);
  if (a='') then continue;
  inc(ListenerNum);
  ListenerDat[ListenerNum].name:=a;
  ListenerDat[ListenerNum].port:=i;
  ListenerDat[ListenerNum].flag:=0;
  while (b<>'') do begin;
    a:=kicsi(getWord(b));
    if (a='pty') then begin;
      OrNumber(ListenerDat[ListenerNum].flag,1);
      continue;
      end;
    if (a='subsys') then begin;
      OrNumber(ListenerDat[ListenerNum].flag,2);
      continue;
      end;
    end;
  end;
xtClose(t);
End;
