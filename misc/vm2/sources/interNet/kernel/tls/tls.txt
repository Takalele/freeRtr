char pipeline should opened for this process...
after it, the process acts as tcp process...
exceptions are the following:

of course, udp not support...

when client tries to connect, it sends a tcp.connect
message. it's port field will be used to identify
the requested service... after it, the tcp.connected
message will be sent to the client when tcp has
estabilished the connection... at this point, the
tls must negotiate things... this process will send
information to the client indicating the current
status of connection... each line will be terminated
with a cr+lf pair...
information will be the following:

- error:<error message>
- locTCP:<local ip address> <local port number>
- remTCP:<remote ip address> <remote port number>
- version:<protocol version>
- plan.kex:<key exchange method>
- plan.enc:<cipher>
- plan.mac:<hash>
- plan.cert:<certificate type>
- plan.exp:<yes/no=exportable status>
- cert:<certificate>[ <certificate>]...
- hostcert:<type> <size>
- hostkey:<type> <size>
- secure
  after it, the connection is estabilished...
