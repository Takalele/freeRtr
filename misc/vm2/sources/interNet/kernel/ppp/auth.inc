Var
  AUTHworking:Boolean;
  AUTHretryDone:Byte;
  AUTHlastidSent:Byte;
  AUTHlastServ:String;
  AUTHlastClnt:String;

Procedure AUTHstartNow;
Var
  a:String;
Begin;
AUTHworking:=True;
case LCPremAuth of
  1:WriteLn('starting PAP layer...');
  2:WriteLn('starting CHAP layer...');
  3:WriteLn('starting EAP layer...');
  else if serverMode then immErr('authentication required, but not agreed!');
  end;
case LCPlocAuth of
  1:WriteLn('starting PAP layer...');
  2:WriteLn('starting CHAP layer...');
  3:WriteLn('starting EAP layer...');
  end;
AUTHlastidSent:=0;
AUTHlastServ:='';
AUTHlastClnt:='';
lastSent:=-99999;
End;

Function CheckOneUser(usr:String;var pwd:String):Boolean;
Label err;
Var
  d:OneLoginUserDataRecord;
  f:xFile;
  i,o:LongInt;
Begin;
CheckOneUser:=True;
usr:=kicsi(usr);
fillchar(f,sizeof(f),0);
if (xOpen(f,LoginDatabaseFilename,xGenFilMod_r)<>0) then goto err;
o:=xFileSize(f) div sizeof(d);
for i:=1 to o do begin;
  if (xBlockRead(f,d,sizeof(d))<>0) then goto err;
  if (kicsi(d.userName)<>usr) then continue;
  xClose(f);
  if (d.flags and LoginFlags_accessPpp=0) then exit;
  pwd:=d.password;
  CheckOneUser:=False;
  exit;
  end;
err:
fillchar(d,sizeof(d),0);
xClose(f);
End;


Procedure AUTHgotPacket(var pck:OnePPPpacketRecord);
Var
  i,o:LongInt;
  a,b,c:String;
Begin;
PPPoptionStart(pck);
case ReadWordMSB(pck.p) of
  LCPauthPAP:case pck.c of
    1:begin;
      WriteLn('PAP got Authenticate-Request');
      if (LCPremAuth=0) then begin; a:='already done!';i:=0; end else begin;
        a:=PPPstringGet(pck);
        b:=PPPstringGet(pck);
        WriteLn('  username: '+a);
        i:=1;
        if not CheckOneUser(a,c) then if (kicsi(b)=kicsi(c)) then i:=0;
        if (i=1) then begin;
          WriteLn('  password: '+b);
          a:='failed!';
          inc(AUTHretryDone);
          end else begin;
          a:='successful!';
          LCPremAuth:=0;
          end;
        end;
      pck.c:=2+i;
      PPPoptionStart(pck);
      PPPstringPut(pck,a);
      pck.a:=addressField;
      pck.x:=controlField;
      i:=pck.pos+4;
      if (i>$400) then i:=$400;
      WriteWordMSB(pck.s,i);
      pipeLineSend(pipe,pck,i+4);
      end;
    2:begin;
      WriteLn('PAP got Authenticate-Ack: '+PPPstringGet(pck));
      LCPlocAuth:=0;
      end;
    3:WriteLn('PAP got Authenticate-Nak: '+PPPstringGet(pck));
    else WriteLn('PAP got invalid code: '+conv2hex(pck.c,1));
    end;
  LCPauthCHAP:case pck.c of
    1:begin;
      WriteLn('CHAP got Challenge');
      b:=PPPstringGet(pck);
      a:=PPPbinaryGet(pck);
      WriteLn('  remote: '+a);
      a:=chr(pck.i)+passWord+b;
      i:=length(a);
      CryptoImmHasher(md5algorithm,'','',a[1],i);
      a[0]:=chr(i);
      AUTHlastClnt:=chr(pck.i)+a;
      pck.c:=2;
      PPPoptionStart(pck);
      PPPstringPut(pck,a);
      PPPbinaryPut(pck,userName);
      pck.a:=addressField;
      pck.x:=controlField;
      i:=pck.pos+4;
      if (i>$400) then i:=$400;
      WriteWordMSB(pck.s,i);
      pipeLineSend(pipe,pck,i+4);
      end;
    2:begin;
      WriteLn('CHAP got Response');
      if (pck.i<>AUTHlastidSent) then exit;
      if (LCPremAuth=0) then begin; a:='already done!';i:=0; end else begin;
        b:=PPPstringGet(pck);
        a:=PPPbinaryGet(pck);
        WriteLn('  username: '+a);
        i:=1;
        if not CheckOneUser(a,c) then begin;
          a:=Chr(AUTHlastidSent)+c+AUTHlastServ;
          i:=length(a);
          CryptoImmHasher(md5algorithm,'','',a[1],i);
          a[0]:=chr(i);
          if (a=b) then i:=0 else i:=1;
          end;
        if (i=1) then begin;
          a:='failed!';
          inc(AUTHretryDone);
          end else begin;
          a:='successful!';
          LCPremAuth:=0;
          end;
        end;
      WriteLn('  sending: '+a);
      pck.c:=3+i;
      PPPoptionStart(pck);
      PPPbinaryPut(pck,a);
      pck.a:=addressField;
      pck.x:=controlField;
      i:=pck.pos+4;
      if (i>$400) then i:=$400;
      WriteWordMSB(pck.s,i);
      pipeLineSend(pipe,pck,i+4);
      end;
    3:begin;
      WriteLn('CHAP got Success: '+PPPbinaryGet(pck));
      LCPlocAuth:=0;
      end;
    4:WriteLn('CHAP got Failure: '+PPPbinaryGet(pck));
    else WriteLn('CHAP got invalid code: '+conv2hex(pck.c,1));
    end;
  LCPauthEAP:case pck.c of
    1:begin;
      WriteLn('EAP got Request');
      inc(pck.pos);
      case pck.d[1] of
        1:begin;
          WriteLn('  identity: '+PPPbinaryGet(pck));
          pck.c:=2;
          PPPoptionStart(pck);
          PPPbinaryPut(pck,#1);
          PPPbinaryPut(pck,userName);
          pck.a:=addressField;
          pck.x:=controlField;
          i:=pck.pos+4;
          if (i>$400) then i:=$400;
          WriteWordMSB(pck.s,i);
          pipeLineSend(pipe,pck,i+4);
          end;
        2:begin;
          WriteLn('  notify: '+PPPbinaryGet(pck));
          pck.c:=2;
          PPPoptionStart(pck);
          PPPbinaryPut(pck,#2);
          pck.a:=addressField;
          pck.x:=controlField;
          i:=pck.pos+4;
          if (i>$400) then i:=$400;
          WriteWordMSB(pck.s,i);
          pipeLineSend(pipe,pck,i+4);
          end;
        3:begin;
          WriteLn('  nak');
          end;
        4:begin;
          WriteLn('  md5challenge');
          b:=PPPstringGet(pck);
          a:=PPPbinaryGet(pck);
          WriteLn('  remote: '+a);
          a:=chr(pck.i)+passWord+b;
          i:=length(a);
          CryptoImmHasher(md5algorithm,'','',a[1],i);
          a[0]:=chr(i);
          AUTHlastClnt:=chr(pck.i)+a;
          pck.c:=2;
          PPPoptionStart(pck);
          PPPbinaryPut(pck,#4);
          PPPstringPut(pck,a);
          PPPbinaryPut(pck,userName);
          pck.a:=addressField;
          pck.x:=controlField;
          i:=pck.pos+4;
          if (i>$400) then i:=$400;
          WriteWordMSB(pck.s,i);
          pipeLineSend(pipe,pck,i+4);
          end;
        else begin;
          WriteLn('  unknown: '+BStr(pck.d[1]));
          pck.c:=2;
          PPPoptionStart(pck);
          PPPbinaryPut(pck,#3#4);
          pck.a:=addressField;
          pck.x:=controlField;
          i:=pck.pos+4;
          if (i>$400) then i:=$400;
          WriteWordMSB(pck.s,i);
          pipeLineSend(pipe,pck,i+4);
          end;
        end;
      end;
    2:begin;
      WriteLn('EAP got Response');
      if (pck.i<>AUTHlastidSent) then exit;
      inc(pck.pos);
      case pck.d[1] of
        1:begin;
          WriteLn('  identity: '+PPPbinaryGet(pck));
          AUTHlastServ:='a';
          lastSent:=-99999;
          end;
        2:begin;
          WriteLn('  notify');
          end;
        3:begin;
          WriteLn('  nak');
          inc(AUTHretryDone);
          end;
        4:begin;
          WriteLn('  md5challenge');
          if (LCPremAuth=0) then begin; a:='already done!';i:=0; end else begin;
            b:=PPPstringGet(pck);
            a:=PPPbinaryGet(pck);
            WriteLn('  username: '+a);
            i:=1;
            if not CheckOneUser(a,c) then begin;
              a:=Chr(AUTHlastidSent)+c+AUTHlastServ;
              i:=length(a);
              CryptoImmHasher(md5algorithm,'','',a[1],i);
              a[0]:=chr(i);
              if (a=b) then i:=0 else i:=1;
              end;
            if (i=1) then begin;
              a:='failed!';
              inc(AUTHretryDone);
              end else begin;
              a:='successful!';
              LCPremAuth:=0;
              end;
            end;
          WriteLn('  sending: '+a);
          pck.c:=3+i;
          PPPoptionStart(pck);
          pck.a:=addressField;
          pck.x:=controlField;
          i:=pck.pos+4;
          if (i>$400) then i:=$400;
          WriteWordMSB(pck.s,i);
          pipeLineSend(pipe,pck,i+4);
          end;
        else begin;
          WriteLn('  unknown: '+BStr(pck.d[1]));
          pck.c:=2;
          PPPoptionStart(pck);
          PPPbinaryPut(pck,#3#4);
          pck.a:=addressField;
          pck.x:=controlField;
          i:=pck.pos+4;
          if (i>$400) then i:=$400;
          WriteWordMSB(pck.s,i);
          pipeLineSend(pipe,pck,i+4);
          end;
        end;
      end;
    3:begin;
      WriteLn('EAP got Success');
      LCPlocAuth:=0;
      end;
    4:WriteLn('EAP got Failure');
    else WriteLn('EAP got invalid code: '+conv2hex(pck.c,1));
    end;
  else exit;
  end;
if (AUTHretryDone>3) then immErr('authentication counter expired!');
AUTHworking:=(LCPremAuth<>0) or (LCPlocAuth<>0);
End;

Procedure AUTHsendPacket;
Var
  pck:OnePPPpacketRecord;
  i:LongInt;
Begin;
PPPoptionStart(pck);
case LCPremAuth of
  1:begin;
    WriteWordMSB(pck.p,LCPauthPAP);
    end;
  2:begin;
    WriteWordMSB(pck.p,LCPauthCHAP);
    WriteLn('CHAP sends Challenge');
    AUTHlastidSent:=Random($100);
    pck.i:=AUTHlastidSent;
    pck.c:=1;
    AUTHlastServ:='';
    for i:=1 to 32 do AUTHlastServ:=AUTHlastServ+chr(Random($100));
    PPPstringPut(pck,AUTHlastServ);
    PPPbinaryPut(pck,UserName);
    end;
  3:begin;
    WriteWordMSB(pck.p,LCPauthEAP);
    if (AUTHlastServ='') then begin;
      WriteLn('EAP sends Identity Request');
      PPPbinaryPut(pck,#1);
      end else begin;
      WriteLn('EAP sends md5challenge Request');
      PPPbinaryPut(pck,#4);
      AUTHlastServ:='';
      for i:=1 to 32 do AUTHlastServ:=AUTHlastServ+chr(Random($100));
      PPPstringPut(pck,AUTHlastServ);
      PPPbinaryPut(pck,UserName);
      end;
    AUTHlastidSent:=Random($100);
    pck.i:=AUTHlastidSent;
    pck.c:=1;
    end;
  end;
if (pck.pos>0) then begin;
  pck.a:=addressField;
  pck.x:=controlField;
  i:=pck.pos+4;
  if (i>$400) then i:=$400;
  WriteWordMSB(pck.s,i);
  pipeLineSend(pipe,pck,i+4);
  end;

PPPoptionStart(pck);
case LCPlocAuth of
  1:begin;
    WriteWordMSB(pck.p,LCPauthPAP);
    WriteLn('PAP sends Authenticate-Request');
    pck.i:=Random($100);
    pck.c:=1;
    PPPstringPut(pck,userName);
    PPPstringPut(pck,passWord);
    end;
  2:begin;
    WriteWordMSB(pck.p,LCPauthCHAP);
    if (AUTHlastClnt='') then exit;
    pck.c:=2;
    PPPoptionStart(pck);
    PPPstringPut(pck,copy(AUTHlastClnt,2,255));
    PPPbinaryPut(pck,userName);
    pck.i:=ord(AUTHlastClnt[1]);
    end;
  3:begin;
    WriteWordMSB(pck.p,LCPauthEAP);
    if (AUTHlastClnt='') then exit;
    pck.c:=2;
    PPPoptionStart(pck);
    PPPbinaryPut(pck,#4);
    PPPstringPut(pck,copy(AUTHlastClnt,2,255));
    PPPbinaryPut(pck,userName);
    pck.i:=ord(AUTHlastClnt[1]);
    end;
  end;
if (pck.pos>0) then begin;
  pck.a:=addressField;
  pck.x:=controlField;
  i:=pck.pos+4;
  if (i>$400) then i:=$400;
  WriteWordMSB(pck.s,i);
  pipeLineSend(pipe,pck,i+4);
  end;
AUTHworking:=(LCPremAuth<>0) or (LCPlocAuth<>0);
End;
