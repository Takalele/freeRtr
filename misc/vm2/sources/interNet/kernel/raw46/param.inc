Procedure parseParams;
Var
  i,o,p:LongInt;
  a,b:String;
Begin;
typeSiz:=3;
fillchar(loc4ip,sizeof(loc4ip),0);
fillchar(rem4ip,sizeof(rem4ip),0);
fillchar(msk4ip,sizeof(msk4ip),0);
fillchar(loc6ip,sizeof(loc6ip),0);
fillchar(rem6ip,sizeof(rem6ip),0);
fillchar(msk6ip,sizeof(msk6ip),0);
p:=2;
a:=kicsi(paramStr(p));
if (a='type') then begin;
  typeSiz:=3;
  inc(p);
  end;
if (a='notype') then begin;
  typeSiz:=1;
  inc(p);
  end;
ena4ip:=false;
ena6ip:=false;
while (p<=paramCount) do begin;
  string2ipAddr(paramStr(p),a);
  if isAddressIPv4mask(a) then begin;
    if string2ipAddr(paramStr(p),loc4ip) then immErr('bad local ip4 address!');
    inc(p);
    if string2ipAddr(paramStr(p),rem4ip) then immErr('bad remote ip4 address!');
    inc(p);
    if string2ipAddr(paramStr(p),msk4ip) then immErr('bad ip4 netmask!');
    inc(p);
    ena4ip:=true;
    end else begin;
    if string2ipAddr(paramStr(p),loc6ip) then immErr('bad local ip4 address!');
    inc(p);
    if string2ipAddr(paramStr(p),rem6ip) then immErr('bad remote ip4 address!');
    inc(p);
    if string2ipAddr(paramStr(p),msk6ip) then immErr('bad ip4 netmask!');
    inc(p);
    ena6ip:=true;
    end;
  end;
if not (ena4ip or ena6ip) then immErr('no ipv4 nor ipv6 address specified!');
End;
