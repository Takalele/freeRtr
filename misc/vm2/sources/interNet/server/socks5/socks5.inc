Function doConn(var con:OneConnectionRecord;conN:LongInt):Boolean;
Label f1;
Var
  buf:array[1..4*1024] of byte;
  i,o:LongInt;
  p1,p2,t1,t2,r1,r2:LongInt;
  a,b:String;
Begin;
doConn:=False;
if (GetTimePast(con.time)>60*5) then begin;
  con.stat:=0;
  doConn:=True;
  exit;
  end;
case con.stat of
  13:begin; {connected}
    pipeLineStats(con.pipe1,p1,r1,t1);
    pipeLineStats(con.pipe2,p2,r2,t2);
    if (p1=0) then if (r1<1) then goto f1;
    if (p2=0) then if (r2<1) then goto f1;
    if (r1>t2) then r1:=t2;
    if (r1>sizeof(buf)) then r1:=sizeof(buf);
    if (r1>0) then begin;
      pipeLineRecv(con.pipe1,buf,r1);
      pipeLineSend(con.pipe2,buf,r1);
      con.time:=CurrentTime;
      end;
    if (r2>t1) then r2:=t1;
    if (r2>sizeof(buf)) then r2:=sizeof(buf);
    if (r2>0) then begin;
      pipeLineRecv(con.pipe2,buf,r2);
      pipeLineSend(con.pipe1,buf,r2);
      con.time:=CurrentTime;
      end;
    end;
  12:begin; {connecting}
    if TCPlookConnected(con.pipe2,a,i,o) then begin;
      if (con.pipe2<>0) then exit;
      WriteLn('connection refused by target');
      doConn:=true;
      exit;
      end;
    WriteLn('connection accepted by target, local side is '+ipAddr2string(a)+' '+BStr(i));
    fillChar(buf,8,0);
    buf[1]:=5;
    buf[2]:=0;
    buf[3]:=0;
    if isAddressIPv4mask(a) then begin;
      buf[4]:=1;
      move(a[12],buf[5],4);
      o:=8;
      end else begin;
      buf[4]:=4;
      move(a,buf[5],16);
      o:=20;
      end;
    WriteWordMSB(buf[o+1],i);
    pipeLineSend(con.pipe1,buf,o+2);
    con.time:=CurrentTime;
    con.stat:=13;
    end;
  11:begin; {port number}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<2) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=2;
    pipeLineRecv(con.pipe1,buf,i);
    con.tprt:=ReadWordMSB(buf);
    WriteLn('connecting to '+ipAddr2string(con.tadr)+' '+BStr(con.tprt));
    TCPbeginConnect(con.pipe2,65536,con.tadr,con.tprt);
    con.time:=CurrentTime;
    con.stat:=12;
    end;
  10:begin; {ip6 address}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<16) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=16;
    pipeLineRecv(con.pipe1,buf,i);
    move(buf,con.tadr,sizeof(con.tadr));
    con.time:=CurrentTime;
    con.stat:=11;
    end;
  9:begin; {ip4 address}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<4) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=4;
    pipeLineRecv(con.pipe1,buf,i);
    a:=IPv4addressPrefix;
    move(buf,a[length(a)+1],4);
    move(a[1],con.tadr,sizeof(con.tadr));
    con.time:=CurrentTime;
    con.stat:=11;
    end;
  8:begin; {request}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<4) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=4;
    pipeLineRecv(con.pipe1,buf,i);
    if (buf[1]<>5) then begin;
      WriteLn('wrong protocol version!');
      goto f1;
      end;
    if (buf[2]<>1) then begin;
      WriteLn('wrong command code!');
      goto f1;
      end;
    case buf[4] of
      1:begin; con.stat:=9;exit; end;
      4:begin; con.stat:=10;exit; end;
      end;
    WriteLn('wrong addressing mode!');
    goto f1;
    end;
  7:begin; {password}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<con.temp) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=con.temp;
    pipeLineRecv(con.pipe1,a[1],i);
    a[0]:=chr(i);
    writeLn('password="'+a+'"');
    buf[1]:=1;
    buf[2]:=0;
    pipeLineSend(con.pipe1,buf,2);
    con.time:=CurrentTime;
    con.stat:=8;
    end;
  6:begin; {length of password}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<1) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=1;
    pipeLineRecv(con.pipe1,buf,i);
    con.temp:=buf[1];
    con.time:=CurrentTime;
    con.stat:=7;
    end;
  5:begin; {username}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<con.temp) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=con.temp;
    pipeLineRecv(con.pipe1,a[1],i);
    a[0]:=chr(i);
    writeLn('username="'+a+'"');
    con.time:=CurrentTime;
    con.stat:=6;
    end;
  4:begin; {length of username}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<2) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=2;
    pipeLineRecv(con.pipe1,buf,i);
    if (buf[1]<>1) then begin;
      WriteLn('wrong protocol version!');
      goto f1;
      end;
    con.temp:=buf[2];
    con.time:=CurrentTime;
    con.stat:=5;
    end;
  3:begin; {methods}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<con.temp) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=con.temp;
    pipeLineRecv(con.pipe1,a[1],i);
    a[0]:=chr(i);
    if (pos(#2,a)<>0) then begin;
      buf[1]:=5;
      buf[2]:=2;
      pipeLineSend(con.pipe1,buf,2);
      con.time:=CurrentTime;
      con.stat:=4;
      exit;
      end;
    if (pos(#0,a)<>0) then begin;
      buf[1]:=5;
      buf[2]:=0;
      pipeLineSend(con.pipe1,buf,2);
      con.time:=CurrentTime;
      con.stat:=8;
      exit;
      end;
    goto f1;
    end;
  2:begin; {version}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (r1<2) then begin;
      if (p1=0) then goto f1;
      exit;
      end;
    i:=2;
    pipeLineRecv(con.pipe1,buf,i);
    if (buf[1]<>5) then begin;
      WriteLn('wrong protocol version!');
      goto f1;
      end;
    con.temp:=buf[2];
    con.time:=CurrentTime;
    con.stat:=3;
    end;
  1:begin; {init}
    if TCPlookConnected(con.pipe1,con.cadr,con.cprt,i) then begin;
      doConn:=(con.pipe1=0);
      exit;
      end;
    o:=0;
    for i:=1 to relayListNum do if TestAddrMask(con.cadr,relayListDat[i].adr,relayListDat[i].msk) then inc(o);
    if (o=0) then begin;
      WriteLn('connection not allowed from '+ipAddr2string(con.cadr)+' '+BStr(con.cprt));
      goto f1;
      end;
    WriteLn('connection accepted from '+ipAddr2string(con.cadr)+' '+BStr(con.cprt));
    con.stat:=2;
    end;
  0:goto f1; {disconnect}
  else begin; f1: con.stat:=0;doConn:=True;exit; end;
  end;
End;
