Function doConn(var con:OneConnectionRecord):Boolean;
Var
  buf:array[1..4*1024] of byte;
  i,o:LongInt;
  a:String;
Begin;
doConn:=False;
if (GetTimePast(con.time)>60*5) then begin;
  WriteLn('connection timed out with '+ipAddr2string(con.addr)+' '+BStr(con.port));
  doConn:=True;
  exit;
  end;
o:=sizeof(buf);
if UDPreceivePacket(con.pipe,a,i,buf,o) then o:=0;
if (o<1) then exit;
if (i<>targetPort) then exit;
if not TCPcompareAddress(a,targetAddr) then exit;
UDPsendPacket(sourcePipe,con.addr,con.port,buf,o);
con.time:=CurrentTime;
End;

Procedure doUpper;
Label f1;
Var
  buf:array[1..4*1024] of byte;
  con:OneConnectionRecord;
  num,i,o:LongInt;
  a:String;
Begin;
o:=sizeof(buf);
if UDPreceivePacket(sourcePipe,a,i,buf,o) then o:=0;
if (o<1) then exit;
for num:=1 to ConnectionNum do begin;
  con:=ConnectionDat^[num];
  if (i<>con.port) then continue;
  if TCPcompareAddress(a,con.addr) then goto f1;
  end;
num:=ConnectionNum+1;
if ResizeMem(num) then begin;
  WriteLn('failed to allocate memory!');
  exit;
  end;
fillchar(con,sizeof(con),0);
move(a,con.addr,sizeof(con.addr));
con.port:=i;
i:=0;
if UDPlistenOnPort(con.pipe,65536,a,i) then begin;
  WriteLn('error allocating socket!');
  ResizeMem(num-1);
  exit;
  end;
WriteLn('connection accepted from '+ipAddr2string(con.addr)+' '+BStr(con.port));
f1:
UDPsendPacket(con.pipe,targetAddr,targetPort,buf,o);
con.time:=CurrentTime;
ConnectionDat^[num]:=con;
End;
