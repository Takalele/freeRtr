Procedure releq2server;
Label f1;
Var
  buf:array[1..2*1024] of byte;
  i,o,p:LongInt;
  a:String;
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;
Begin;
if (getTimePast(lastSent)>30) then skinnySendKeepalive;
skinnyRecvPacket(buf,o,lastMsgTyp);
if (o<0) then exit;
if (o<255) then ab0:=o else ab0:=255;
move(buf,ab[1],ab0);
case lastMsgTyp of
  $92:begin;
    myPhoneNumber:=getAsciiz(copy(a,5,$18));
    WriteLn('number: "'+myPhoneNumber+'"');
    WriteLn('name: "'+getAsciiz(copy(a,29,$28))+'"');
    end;
  $90:begin;
    WriteLn('all: "'+getAsciiz(copy(a,13,$18))+'"');
    WriteLn('busy: "'+getAsciiz(copy(a,41,$18))+'"');
    WriteLn('noAnswer: "'+getAsciiz(copy(a,69,$18))+'"');
    end;
  $8f:begin;
    callPeerNum:=getAsciiz(copy(a,41,$18));
    WriteLn('calling name: "'+getAsciiz(copy(a,1,$28))+'"');
    WriteLn('calling number: "'+callPeerNum+'"');
    WriteLn('called name: "'+getAsciiz(copy(a,65,$28))+'"');
    WriteLn('called number: "'+getAsciiz(copy(a,105,$18))+'"');
    if (upperStat<>7) then exit;
    a:=processPar;
    kicserel('`',myPhoneNumber,a);
    kicserel('''',callPeerNum,a);
    WriteLn('starting '+processNam+' '+a+'...');
    if (xExecBgnd(processNam,a,callProcNum)<>0) then callProcNum:=0;
    end;
  $111:begin;
    p:=ReadLongLSB(a[1]);
    callIdentify:=ReadLongLSB(a[9]);
    case p of
       1:a:='OffHook';
       2:a:='OnHook';
       3:a:='RingOut';
       4:a:='RingIn';
       5:a:='Connected';
       6:a:='Busy';
       7:a:='Congestion';
       8:a:='Hold';
       9:a:='CallWaiting';
      10:a:='CallTransfer';
      11:a:='CallPark';
      12:a:='Proceed';
      13:a:='CallRemoteMultiline';
      14:a:='InvalidNumber';
      else a:='unknown:'+BStr(p);
      end;
    WriteLn('state: '+a+'; id='+BStr(callIdentify)+'; upper='+BStr(upperStat));
    callProcNum:=0;
    if (upperStat=2) and (p=1) then begin;
      a:=callPeerNum;
      for i:=1 to ab0 do skinnySendButton(ab[i]-$30);
      inc(upperStat);
      exit;
      end;
    if (upperStat=3) then if (p in [3,5,12]) then exit;
    if (upperStat=8) and (p=5) then exit;
    if (upperStat=0) and (p=4) then begin;
      upperStat:=7;
      callProcNum:=-1;
      exit;
      end;
    if (p<>2) then skinnySendSoftKey(callIdentify,9);
    if (upperPipe<>0) then upperStat:=1;
    end;
  $107:begin;
    WriteLn('number: "'+getAsciiz(copy(a,1,$18))+'"');
    i:=ReadLongLSB(a[25]);
    if (i<>callIdentify) then begin;
      skinnySendSoftKey(i,9);
      exit;
      end;
    skinnySendStatistic(a);
    end;
  $8a:begin;
    if (upperStat in [3,8]) then else exit;
    pipeLineClose(voicePipe);
    for i:=1 to 3 do relequish;
    voicePort:=ReadLongLSB(a[13]);
    a:=IPv4addressPrefix+copy(a,9,4);
    move(a[1],voiceAddr,sizeof(voiceAddr));
    WriteLn('target: '+ipAddr2string(voiceAddr)+' '+BStr(voicePort));
    i:=voicePort;
    if RTPopenConnection(voicePipe,65536,a[1],i) then upperStat:=1;
    WriteLn('source: '+ipAddr2string(a[1])+' '+BStr(i));
    voiceMode:=voiceMode or 2;
    sendSiz:=0;
    sendTim:=0;
    end;
  $105:begin;
    if (upperStat in [3,8]) then else exit;
    pipeLineClose(voicePipe);
    for i:=1 to 3 do relequish;
    o:=ReadLongMSB(a[5]);
    ab0:=sizeof(voiceAddr);
    move(voiceAddr,a[1],ab0);
    WriteLn('target: '+ipAddr2string(voiceAddr)+' '+BStr(voicePort));
    i:=voicePort;
    if RTPopenConnection(voicePipe,65536,a[1],i) then upperStat:=1;
    WriteLn('source: '+ipAddr2string(a[1])+' '+BStr(i));
    skinnySendRcvChnAck(a,i,o);
    voiceMode:=voiceMode or 1;
    recvSiz:=0;
    end;
  $106:upperStat:=1;
  $8b:upperStat:=1;
  $94:WriteLn('date: '+padUpZeros(ReadLongLSB(buf[1]))+'-'+padUpZeros(ReadLongLSB(buf[5]))+'-'+padUpZeros(ReadLongLSB(buf[13]))
      +' '+padUpZeros(ReadLongLSB(buf[17]))+':'+padUpZeros(ReadLongLSB(buf[21]))+':'+padUpZeros(ReadLongLSB(buf[25])));
  $112:WriteLn('value: "'+getAsciiz(copy(a,5,$20))+'"');
  $11d:WriteLn('value: "'+getAsciiz(copy(a,1,$18))+'"');
  $9b:skinnySendCapaRep;
  $00:skinnySendKeepAck;
  end;
End;



Procedure releq2voice;
Label f1;
Var
  buf:array[1..32*1024] of byte;
  i,o,p:LongInt;
Begin;
if (voiceMode<>3) then exit;
o:=sizeof(buf);
pipeLineRecv(voicePipe,buf,o);
if (o<1) then begin;
  pipeLineStats(voicePipe,o,i,i);
  if (o<>0) then goto f1;
  WriteLn('rtp closed!');
  upperStat:=1;
  exit;
  end;
dec(o);
if (buf[1]<>8) then begin;
  WriteLn('got unknown rtp type!');
  goto f1;
  end;
inc(rcvdPck);
inc(rcvdOct,o);
if (o>sizeof(recvBuf)) then o:=sizeof(recvBuf);
deleteFromBuffer(recvBuf,recvSiz,o-sizeof(recvBuf)+recvSiz);
move(buf[2],recvBuf[recvSiz+1],o);
inc(recvSiz,o);
f1:
if (abs(currentTime-sendTim)<ticksPerPack) then exit;
if (sendSiz<bytesPerPack) then i:=sendSiz else i:=bytesPerPack;
if (i<1) then exit;
buf[1]:=8;
move(sendBuf,buf[2],i);
deleteFromBuffer(sendBuf,sendSiz,i);
pipeLineSend(voicePipe,buf,i+1);
if (sentPck mod 5=0) then sendTim:=-999999 else sendTim:=currentTime;
inc(sentPck);
inc(sentOct,i);
End;
