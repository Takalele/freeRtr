Function doConn(var con:OneConnectionRecord):Boolean;
Label f1;
Var
  buf:array[1..16*1024] of byte;
  siz:LongInt;
  i,o,p:LongInt;
  a,b:String;
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;

Procedure sendLn(a:String);
Var
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;
Begin;
a:=a+#13#10;
pipeLineSend(con.pipe,ab[1],ab0);
con.timeR:=CurrentTime;
End;

Procedure sendBuf;
Begin;
if (siz<1) then exit;
pipeLineSend(con.pipe,buf,siz);
siz:=0;
End;

Procedure sendWelcome;
Var
  a:String;
  i:LongInt;
Begin;
a:=ProggyName;
kicserel(' ','_',a);
sendLn('001 '+con.nick+' :welcome to the Internet Relay Network '+con.nick);
i:=pos('_v',a);
sendLn('002 '+con.nick+' :your host is '+serverName+', running version '+copy(a,i+2,666));
sendLn('003 '+con.nick+' :this server was created '+ProggyDate);
sendLn('004 '+con.nick+' '+serverName+' '+a+' i t');
End;

Procedure sendLuser;
Var i,o:LongInt;
Begin;
sendLn('251 '+con.nick+' :there are '+BStr(ConnectionNum)+' users and 0 services on 1 servers');
sendLn('252 '+con.nick+' 0 :operators online');
sendLn('253 '+con.nick+' 0 :unknown connections');
o:=0;
for i:=1 to channelsMax do if (channelsDat[i].users>0) then inc(o);
sendLn('254 '+con.nick+' '+BStr(o)+' :channels formed');
sendLn('255 '+con.nick+' :i have '+BStr(ConnectionNum)+' users, 0 services and 0 servers');
End;

Procedure sendMotd;
Var
  a:String;
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;
  p:LongInt;
Begin;
addStr2buf(buf,siz,'375 '+con.nick+' :- '+serverName+' message of the day -'#13#10);
p:=0;
while (p<greetMsgSiz) do begin;
  inc(p);
  move(greetMsgDat[p],a,sizeof(a));
  inc(p,ab0);
  addStr2buf(buf,siz,'372 '+con.nick+' :- ');
  addStr2buf(buf,siz,a);
  addCrlf2buf(buf,siz);
  end;
addStr2buf(buf,siz,'376 '+con.nick+' :end of motd command'#13#10);
sendBuf;
End;

Procedure sendTopic(var chn:OneChannelRecord);
Var
  a:String;
  i:LongInt;
Begin;
a:=chn.topic;
if (a<>'') then i:=332 else begin;
  i:=331;
  a:='no topic is set';
  end;
addStr2buf(buf,siz,BStr(i)+' '+con.nick+' #'+chn.name+' :');
addStr2buf(buf,siz,a);
addCrlf2buf(buf,siz);
sendBuf;
End;

Procedure sendNames(chn:LongInt);
Var
  a:String;
  i:LongInt;
Begin;
a:=channelsDat[chn].name;
addStr2buf(buf,siz,'353 '+con.nick+' = #'+a+' :');
for i:=1 to ConnectionNum do begin;
  if membershipTest(ConnectionDat^[i],chn) then continue;
  addStr2buf(buf,siz,ConnectionDat^[i].nick+' ');
  end;
dec(siz);
addStr2buf(buf,siz,#13#10'366 '+con.nick+' #'+a+' :end of names list'#13#10);
sendBuf;
End;


Procedure sendList;
Label f1;
Var
  c:OneChannelRecord;
  i,o:LongInt;
  a:String;
Begin;
for i:=1 to channelsMax do begin;
  c:=channelsDat[i];
  if (c.users<1) then continue;
  addStr2buf(buf,siz,'322 '+con.nick+' #'+c.name+' '+BStr(c.users)+' :');
  addStr2buf(buf,siz,c.topic);
  addCrlf2buf(buf,siz);
  end;
addStr2buf(buf,siz,'323 '+con.nick+' :end of list'#13#10);
sendBuf;
End;




Begin;
if (GetTimePast(con.time)>5*60) then begin;
  WriteLn('connection timed out with '+ipAddr2string(con.adr)+' '+BStr(con.prt));
  broadcastMessage(con,':'+con.nick+' QUIT ',':connection timed out!');
  doConn:=True;
  exit;
  end;
doConn:=False;
case con.stat of
  4:begin; {command}
    i:=sizeof(ab0);
    pipeLineRecv(con.pipe,ab0,i);
    if (i<>sizeof(ab0)) then goto f1;
    if not (ab0 in [13,10]) then begin;
      con.cmd:=con.cmd+chr(ab0);
      exit;
      end;
    con.stat:=2;
    b:=con.cmd;
    a:=kicsi(getWord(b));
    siz:=0;
    if (a='quit') then begin;
      a:=getWord(b);
      if (a='') then a:='user requested exiting!';
      broadcastMessage(con,':'+con.nick+' QUIT :',a);
      con.stat:=0;
      exit;
      end;
    if (a='pass') then exit;
    if (a='user') then exit;
    if (a='pong') then exit;
    if (a='error') then exit;
    if (a='ping') then begin;
      sendLn('PONG '+b);
      exit;
      end;
    if (a='nick') then begin;
      a:=getWord(b);
      if IsThisBuggyName(a) then begin;
        sendLn('432 '+a+' :erroneous nickname');
        exit;
        end;
      if (kicsi(a)<>kicsi(con.nick)) then
       if (findOneNick(a)<>0) then begin;
        sendLn('432 '+a+' :nickname is already in use');
        exit;
        end;
      b:=con.nick;
      con.nick:=a;
      if (b<>'') then begin;
        broadcastMessage(con,':'+b+' NICK ',a);
        exit;
        end;
      sendWelcome;
      sendLuser;
      sendMotd;
      exit;
      end;
    if (con.nick='') then begin;
      sendLn('ERROR :please log in first');
      exit;
      end;

    o:=0;
    if (a='privmsg') then o:=1 else if (a='notice') then o:=2;
    if (o<>0) then begin;
      a:=getWord(b);
      if (ab[1]<>$23) then begin;
        p:=findOneNick(a);
        if (p<1) then begin;
          if (o<>1) then exit;
          sendLn('401 '+con.nick+' '+a+' :no such nick');
          exit;
          end;
        addStr2buf(buf,siz,':'+con.nick);
        if (o=1) then a:=' PRIVMSG ' else a:=' NOTICE ';
        addStr2buf(buf,siz,a);
        addStr2buf(buf,siz,ConnectionDat^[p].nick);
        addStr2buf(buf,siz,' :');
        a:=getWord(b);
        addStr2buf(buf,siz,a);
        addCrlf2buf(buf,siz);
        pipeLineSend(ConnectionDat^[p].pipe,buf,siz);
        exit;
        end;
      a:=copy(a,2,666);
      p:=findOneChan(a);
      if (p<1) then begin;
        if (o<>1) then exit;
        sendLn('401 '+con.nick+' #'+a+' :no such channel');
        exit;
        end;
      if membershipTest(con,p) then begin;
        if (o<>1) then exit;
        sendLn('442 '+con.nick+' #'+a+' :uou''re not on that channel');
        exit;
        end;
      a:=getWord(b);
      if (o=1) then b:=' PRIVMSG #' else b:=' NOTICE #';
      channelMessage(p,':'+con.nick+b+channelsDat[p].name+' :',a);
      exit;
      end;

    if (a='part') then begin;
      a:=getWord(b);
      p:=findOneChan(copy(a,2,666));
      if (ab[1]<>$23) or (p<1) then begin;
        sendLn('403 '+con.nick+' '+a+' :no such channel');
        exit;
        end;
      o:=0;
      for i:=1 to con.chanN do if (con.chanD[i]=p) then o:=i;
      if (o<1) then begin;
        sendLn(':'+con.nick+' PART #'+channelsDat[p].name);
        exit;
        end;
      channelMessage(p,':'+con.nick+' PART #',channelsDat[p].name);
      dec(channelsDat[p].users);
      con.chanD[o]:=con.chanD[con.chanN];
      dec(con.chanN);
      membershipSort(con);
      exit;
      end;
    if (a='join') then begin;
      if (con.chanN>=channelUser) then begin;
        sendLn('405 '+con.nick+' '+a+' :you have joined too many channels');
        exit;
        end;
      a:=getWord(b);
      if (ab[1]<>$23) then begin;
        sendLn('403 '+con.nick+' '+a+' :no such channel');
        exit;
        end;
      a:=copy(a,2,666);
      p:=findOneChan(a);
      if (p<1) then begin;
        if IsThisBuggyName(a) then begin;
          sendLn('403 '+con.nick+' #'+a+' :wrong channel name');
          exit;
          end;
        for i:=1 to channelsMax do if (channelsDat[i].users<1) then begin; p:=i;break; end;
        if (p<1) then begin;
          sendLn('405 '+con.nick+' #'+a+' :no more free channel slots');
          exit;
          end;
        fillchar(channelsDat[p],sizeof(channelsDat[1]),0);
        channelsDat[p].name:=a;
        end;
      if membershipTest(con,p) then begin;
        inc(con.chanN);
        con.chanD[con.chanN]:=p;
        membershipSort(con);
        inc(channelsDat[p].users);
        channelMessage(p,':'+con.nick+' JOIN #',channelsDat[p].name);
        end else sendLn(':'+con.nick+' JOIN #'+channelsDat[p].name);
      sendTopic(channelsDat[p]);
      sendNames(p);
      exit;
      end;
    if (a='motd') then begin;
      sendMotd;
      exit;
      end;
    if (a='lusers') then begin;
      sendLuser;
      exit;
      end;
    if (a='time') then begin;
      sendLn('391 '+con.nick+' :'+getDateTime);
      exit;
      end;
    if (a='list') then begin;
      sendList;
      exit;
      end;
    if (a='version') then begin;
      a:=proggyName;
      i:=pos(' v',a);
      sendLn('351 '+con.nick+' '+copy(a,i+2,666)+' '+serverName+' :basic release');
      exit;
      end;
    if (a='stats') then begin;
      a:=getWord(b);
      sendLn('219 '+con.nick+' '+a+' :end of stats report');
      exit;
      end;
    if (a='links') then begin;
      a:=getWord(b);
      sendLn('365 '+con.nick+' '+a+' :end of links list');
      exit;
      end;
    if (a='oper') then begin;
      sendLn('464 '+con.nick+' :password incorrect');
      exit;
      end;
    if (a='names') then begin;
      a:=getWord(b);
      p:=findOneChan(copy(a,2,666));
      if (ab[1]<>$23) or (p<1) then begin;
        sendLn('403 '+con.nick+' '+a+' :no such channel');
        exit;
        end;
      sendNames(p);
      exit;
      end;
    if (a='topic') then begin;
      a:=getWord(b);
      p:=findOneChan(copy(a,2,666));
      if (ab[1]<>$23) or (p<1) then begin;
        sendLn('403 '+con.nick+' '+a+' :no such channel');
        exit;
        end;
      if (b='') then begin;
        sendTopic(channelsDat[p]);
        exit;
        end;
      if membershipTest(con,p) then begin;
        sendLn('442 '+con.nick+' '+a+' :you are not that channel');
        exit;
        end;
      a:=getWord(b);
      channelsDat[p].topic:=a;
      channelMessage(p,':'+con.nick+' TOPIC #'+channelsDat[p].name+' :',a);
      exit;
      end;
    if (a='invite') then begin;
      a:=getWord(b);
      p:=findOneNick(a);
      if (p<1) then begin;
        sendLn('401 '+con.nick+' '+a+' :no such nick');
        exit;
        end;
      a:=getWord(b);
      o:=findOneChan(copy(a,2,666));
      if (ab[1]<>$23) or (o<1) then begin;
        sendLn('403 '+con.nick+' '+a+' :no such channel');
        exit;
        end;
      a:=ConnectionDat^[p].nick;
      b:=channelsDat[o].name;
      channelMessage(o,'341 '+con.nick+' #',b+' '+a);
      a:=':'+con.nick+' INVITE '+a+' #'+b+#13#10;
      pipeLineSend(ConnectionDat^[p].pipe,ab[1],ab0);
      exit;
      end;
    if (a='whois') then begin;
      a:=getWord(b);
      p:=findOneNick(a);
      if (p<1) then begin;
        sendLn('401 '+con.nick+' '+a+' :no such nick');
        exit;
        end;
      a:=ConnectionDat^[p].nick;
      sendLn('311 '+con.nick+' '+a+' '+a+' '+ipAddr2string(ConnectionDat^[p].adr)+' :'+a);
      sendLn('317 '+con.nick+' '+a+' '+BStr(getTimePast(ConnectionDat^[p].time))+' :seconds idle');
      sendLn('318 '+con.nick+' '+a+' :End of WHOIS list');
      exit;
      end;
    if (a='userhost') then begin;
      a:=getWord(b);
      p:=findOneNick(a);
      if (p<1) then begin;
        sendLn('401 '+con.nick+' '+a+' :no such nick');
        exit;
        end;
      a:=ConnectionDat^[p].nick;
      sendLn('302 '+con.nick+' :'+a+'=-'+a+'@'+ipAddr2string(ConnectionDat^[p].adr));
      exit;
      end;

    sendLn('ERROR :unknown command: '+a+' '+b);
    end;
  3:begin; {prefix data}
    i:=sizeof(ab0);
    pipeLineRecv(con.pipe,ab0,i);
    if (i<>sizeof(ab0)) then goto f1;
    if (ab0 in [13,10]) then con.stat:=2;
    if (ab0<>$20) then exit;
    con.stat:=4;
    con.cmd:='';
    end;
  2:begin; {first char}
    if (getTimePast(con.timeR)>60) then sendLn('PING :'+serverName);
    i:=sizeof(ab0);
    pipeLineRecv(con.pipe,ab0,i);
    if (i<>sizeof(ab0)) then begin;
      f1:
      pipeLineStats(con.pipe,i,o,p);
      if (i<>0) then exit;
      con.stat:=0;
      broadcastMessage(con,':'+con.nick+' QUIT ',':connection lost!');
      exit;
      end;
    con.time:=CurrentTime;
    con.timeR:=CurrentTime;
    if (ab0 in [13,10]) then exit;
    con.cmd:=chr(ab0);
    if (ab0=$3a) then con.stat:=3 else con.stat:=4;
    end;
  1:begin; {init}
    if TCPlookConnected(con.pipe,con.adr,con.prt,i) then begin;
      doConn:=(con.pipe=0);
      exit;
      end;
    WriteLn('connection accepted from '+ipAddr2string(con.adr)+' '+BStr(con.prt));
    con.stat:=2;
    end;
  0:begin; doConn:=True;exit; end; {disconnect}
  else begin; doConn:=True;exit; end;
  end;
End;
