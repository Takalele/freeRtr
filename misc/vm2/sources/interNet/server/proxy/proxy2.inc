Function doConn(var con:OneConnectionRecord;conN:LongInt):Boolean;
Label f1,f2;
Var
  buf:array[1..4*1024] of byte;
  p1,p2,t1,t2,r1,r2:LongInt;
  i,o,p,q:LongInt;
  a,b,c,d:String;
Begin;
doConn:=False;
if (GetTimePast(con.time)>60*5) then begin;
  if (con.stat<50) then sendMessage(con,'504 gateway timeout','your request has timed out!');
  con.stat:=0;
  doConn:=True;
  exit;
  end;
case con.stat of
  100:begin; {connected}
    pipeLineStats(con.pipe1,p1,r1,t1);
    pipeLineStats(con.pipe2,p2,r2,t2);
    if (p1=0) then if (r1<1) then goto f1;
    if (p2=0) then if (r2<1) then goto f1;
    if (r1>t2) then r1:=t2;
    if (r1>sizeof(buf)) then r1:=sizeof(buf);
    if (r1>0) then begin;
      pipeLineRecv(con.pipe1,buf,r1);
      pipeLineSend(con.pipe2,buf,r1);
      con.time:=CurrentTime;
      end;
    if (r2>t1) then r2:=t1;
    if (r2>sizeof(buf)) then r2:=sizeof(buf);
    if (r2>0) then begin;
      pipeLineRecv(con.pipe2,buf,r2);
      pipeLineSend(con.pipe1,buf,r2);
      con.time:=CurrentTime;
      end;
    end;
  99:begin; {gopher directory data}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (p1=0) then goto f1;
    if (t1<1024) then exit;
    i:=getOneLine(con.pipe2,con.line);
    if (i=0) then exit;
    if (i<>2) then begin;
      sendOneString(con.pipe1,'</pre><hr><br><i>generated by <b>'+proggyName+'</b>.</i>'#13#10);
      sendOneString(con.pipe1,'</body></html>'#13#10);
      goto f1;
      end;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (b='') then exit;
    if (b='.') then begin;
      pipeLineClose(con.pipe2);
      exit;
      end;
    c:=getWord(b,#9);
    d:=getWord(b,#9);
    a:=getWord(b,#9);
    p:=BVal(b);
    if (p=0) then p:=70;
    b:=copy(c,1,1);
    if (b<' ') or (b>'~') then b:='!';
    c:=copy(c,2,666);
    if (c='') then c:='---';
    d:='gopher://'+a+':'+BStr(p)+'/'+b+'/'+d;
    sendOneString(con.pipe1,'<a href="');
    sendOneString(con.pipe1,d);
    sendOneString(con.pipe1,'">');
    sendOneString(con.pipe1,c);
    sendOneString(con.pipe1,'</a>'#13#10);
    end;
  98:begin; {ftp directory data}
    pipeLineStats(con.pipe1,p1,r1,t1);
    if (p1=0) then goto f1;
    if (t1<1024) then exit;
    i:=getOneLine(con.pipe2,con.line);
    if (i=0) then exit;
    if (i<>2) then begin;
      sendOneString(con.pipe1,'</pre><hr><br><i>generated by <b>'+proggyName+'</b>.</i>'#13#10);
      sendOneString(con.pipe1,'</body></html>'#13#10);
      goto f1;
      end;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (b='') then exit;
    i:=lastPos(' ',b);
    a:=copy(b,1,i-1);
    b:=copy(b,i+1,666);
    i:=0;
    if (copy(a,1,1)='d') then inc(i);
    if (copy(a,1,1)='l') then inc(i);
    if (pos('<dir>',b)<>0) then inc(i);
    if (pos('.dir',b)<>0) then inc(i);
    if (i<>0) then b:=b+'/';
    sendOneString(con.pipe1,a+' ');
    a:=b;
    if (a='') then a:='-';
    sendOneString(con.pipe1,'<a href=');
    sendOneString(con.pipe1,con.uri);
    sendOneString(con.pipe1,b+'>'+a+'</a><br>');
    end;
  2:begin; {read request}
    i:=getOneLine(con.pipe1,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    a:=copy(b,length(b)-8,666);
    b:=copy(b,1,length(b)-9);
    if (copy(kicsi(a),1,6)<>' http/') then begin;
      sendMessage(con,'505 version not supported','requested http version ('+a+') is not implemented!');
      goto f1;
      end;
    a:=kicsi(getWord(b,' '));
    i:=-1;
    if (a='connect') then i:=0;
    if (a='get') then i:=1;
    if (a='post') then i:=2;
    if (a='put') then i:=3;
    if (i<0) then begin;
      sendMessage(con,'501 not implemented','requested method ('+a+') is not implemented!');
      goto f1;
      end;
    con.method:=i;
    a:=kicsi(getWord(b,'://'));
    if (b='') then begin; b:=a;a:='tcp'; end;
    i:=-1;
    o:=0;
    if (a='tcp') then begin; i:=0;o:=23; end;
    if (a='telnet') then begin; i:=0;o:=23; end;
    if (a='ssh') then begin; i:=1;o:=23; end;
    if (a='tls') then begin; i:=2;o:=443; end;
    if (a='ssl') then begin; i:=2;o:=443; end;
    if (a='http') then begin; i:=0;o:=80; end;
    if (a='https') then begin; i:=2;o:=443; end;
    if (a='ftp') then begin; i:=3;o:=21; end;
    if (a='gopher') then begin; i:=4;o:=70; end;
    if (i<0) then begin;
      sendMessage(con,'405 unknown method','requested method ('+a+') is not implemented!');
      goto f1;
      end;
    con.proto:=i;
    con.tprt:=o;
    a:=getWord(b,'/');
    con.uri:=b;
    b:=a;
    a:=getWord(b,'@');
    if (b='') then begin; b:=a;a:=''; end;
    con.userpass:=getWord(a,':');
    con.userpass:=con.userpass+#13+a;
    if (copy(b,1,1)='[') then begin;
      b:=copy(b,2,666);
      a:=getWord(b,']');
      end else begin;
      a:=getWord(b,':');
      b:=':'+b;
      end;
    con.domain:=a;
    if (copy(b,1,1)<>':') then b:='';
    i:=BVal(copy(b,2,666));
    if (i<>0) then con.tprt:=i;
    if string2ipAddr(con.domain,con.tadr) then begin;
      DNSresolvePut(1,con.domain);
      con.stat:=3;
      exit;
      end;
    con.domain:=ipAddr2string(con.tadr);
    if not isAddressIPv4mask(con.tadr) then con.domain:='['+con.domain+']';
    con.stat:=4;
    end;
  5:begin; {read header lines}
    i:=getOneLine(con.pipe1,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (b='') then begin; con.stat:=6;exit; end;
    a:=kicsi(getWord(b,':'));
    if (a<>'authorization') then exit;
    getWord(b,' ');
    b:=decodeBase64(b);
    if (b='') then exit;
    a:=getWord(b,':');
    con.userpass:=a+#13+b;
    end;
  16:begin; {waiting for beginning}
    i:=getFtpLine(con.pipe3,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (copy(b,1,1)<>'1') then begin;
      sendMessage(con,'409 conflict','error getting data: '+b);
      goto f1;
      end;
    if (copy(con.uri,length(con.uri),666)<>'/') then begin;
      sendOneString(con.pipe1,'HTTP/1.1 200 ok'#13#10);
      sendBasicHeader(con.pipe1,'application/octet-stream');
      sendOneString(con.pipe1,#13#10);
      con.stat:=100;
      exit;
      end;
    sendOneString(con.pipe1,'HTTP/1.1 200 ok'#13#10);
    sendBasicHeader(con.pipe1,'');
    sendOneString(con.pipe1,#13#10);
    sendOneString(con.pipe1,'<html><head><title>ftp</title></head><body>'#13#10);
    sendOneString(con.pipe1,'host: <b>'+con.domain+' ('+ipAddr2string(con.tadr)+' '+BStr(con.tprt)+')</b><br>'#13#10);
    sendOneString(con.pipe1,'path: <b>'+con.uri+'</b><br>'#13#10);
    sendOneString(con.pipe1,'<hr><pre>'#13#10);
    if (length(con.uri)>1) then begin;
      sendOneString(con.pipe1,'<a href=/>root directory</a>'#13#10);
      sendOneString(con.pipe1,'<a href='+getParentDir(con.uri)+'>parent directory</a>'#13#10);
      end;
    con.stat:=98;
    end;
  15:begin; {changing type}
    i:=getFtpLine(con.pipe3,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (copy(b,1,1)<>'2') then begin;
      sendMessage(con,'409 conflict','error changing mode: '+b);
      goto f1;
      end;
    if (copy(con.uri,length(con.uri),666)='/') then a:='LIST ' else a:='RETR ';
    sendOneString(con.pipe3,a+con.uri+#13#10);
    con.time:=CurrentTime;
    con.stat:=16;
    end;
  14:begin; {waiting for data connection}
    if TCPlookConnected(con.pipe2,a,o,i) then begin;
      if (con.pipe2<>0) then exit;
      sendMessage(con,'409 conflict','remote peer refused data connection!');
      goto f1;
      end;
    if (copy(con.uri,length(con.uri),666)='/') then a:='A' else a:='I';
    sendOneString(con.pipe3,'TYPE '+a+#13#10);
    con.time:=CurrentTime;
    con.stat:=15;
    end;
  13:begin; {connecting to remote data port}
    i:=getFtpLine(con.pipe3,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (copy(b,1,1)<>'2') then begin;
      sendMessage(con,'409 conflict','error entering passive mode: '+b);
      goto f1;
      end;
    b:=copy(b,pos('(',b)+1,666);
    b:=copy(b,1,pos(')',b)-1);
    if (copy(b,1,1)='|') then begin;
      b:=copy(b,2,666);
      getWord(b,'|');
      getWord(b,'|');
      o:=BVal(getWord(b,'|'));
      end else begin;
      for i:=1 to 4 do getWord(b,',');
      o:=BVal(getWord(b,','))*256;
      inc(o,BVal(b));
      end;
    if (o=0) then o:=20;
    TCPprocessId:=processTCP;
    WriteLn('connecting to tcp '+ipAddr2string(con.tadr)+' '+BStr(o)+'...');
    TCPbeginConnect(con.pipe2,65536,con.tadr,o);
    con.time:=CurrentTime;
    con.stat:=14;
    end;
  12:begin; {entering passive mode}
    i:=getFtpLine(con.pipe3,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (copy(b,1,1)<>'2') then begin;
      sendMessage(con,'409 conflict','error sending password: '+b);
      goto f1;
      end;
    if isAddressIPv4mask(con.tadr) then a:='PASV' else a:='EPSV 2';
    sendOneString(con.pipe3,a+#13#10);
    con.stat:=13;
    end;
  11:begin; {waiting for username ack}
    i:=getFtpLine(con.pipe3,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (copy(b,1,1)<>'3') then begin;
      sendMessage(con,'409 conflict','error sending username: '+b);
      goto f1;
      end;
    b:=con.userpass;
    a:=getWord(b,#13);
    sendOneString(con.pipe3,'PASS '+b+#13#10);
    con.stat:=12;
    end;
  10:begin; {waiting for greeting}
    i:=getFtpLine(con.pipe3,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=con.line;
    con.line:='';
    if (copy(b,1,1)<>'2') then begin;
      sendMessage(con,'409 conflict','error starting connection: '+b);
      goto f1;
      end;
    b:=con.userpass;
    a:=getWord(b,#13);
    sendOneString(con.pipe3,'USER '+a+#13#10);
    con.stat:=11;
    end;
  8:begin; {securing connection}
    i:=getOneLine(con.pipe2,con.line);
    if (i=0) then exit;
    if (i<>2) then goto f1;
    con.time:=CurrentTime;
    b:=kicsi(con.line);
    con.line:='';
    case con.proto of
      1:a:='connect';
      2:a:='secure';
      else a:='';
      end;
    if (b=a) then begin;
      con.stat:=9;
      exit;
      end;
    if (b='username?') then sendOneString(con.pipe2,con.userpass+#13);
    end;
  7:begin; {connecting}
    if TCPlookConnected(con.pipe2,a,o,i) then begin;
      if (con.pipe2<>0) then exit;
      sendMessage(con,'403 forbidden','remote peer refused connection!');
      goto f1;
      end;
    con.stat:=9;
    con.time:=CurrentTime;
    if (con.proto in [1,2]) then con.stat:=8;
    end;
  1:begin; {init}
    if TCPlookConnected(con.pipe1,con.cadr,con.cprt,i) then begin;
      doConn:=(con.pipe1=0);
      exit;
      end;
    o:=0;
    for i:=1 to relayListNum do if TestAddrMask(con.cadr,relayListDat[i].adr,relayListDat[i].msk) then inc(o);
    if (o=0) then begin;
      sendMessage(con,'403 forbidden','relaying not allowed to you!');
      WriteLn('connection not allowed from '+ipAddr2string(con.cadr)+' '+BStr(con.cprt));
      goto f1;
      end;
    WriteLn('connection accepted from '+ipAddr2string(con.cadr)+' '+BStr(con.cprt));
    con.time:=CurrentTime;
    con.stat:=2;
    end;
  9:begin; {ready to start relaying}
    con.time:=CurrentTime;
    if (con.method=0) then begin;
      f2:
      sendMessage(con,'200 ok','');
      con.stat:=100;
      exit;
      end;
    if (con.proto=3) then begin;
      if (con.userpass=#13) then con.userpass:='anonymous'#13'proxy@localhost';
      con.uri:='/'+con.uri;
      con.pipe3:=con.pipe2;
      con.pipe2:=0;
      con.stat:=10;
      exit;
      end;
    if (con.proto=4) then begin;
      if (con.uri='') then con.uri:='1/';
      sendOneString(con.pipe2,copy(con.uri,3,666)+#13#10);
      if (copy(con.uri,1,2)<>'1/') then goto f2;
      sendOneString(con.pipe1,'HTTP/1.1 200 ok'#13#10);
      sendBasicHeader(con.pipe1,'');
      sendOneString(con.pipe1,#13#10);
      sendOneString(con.pipe1,'<html><head><title>gopher</title></head><body>'#13#10);
      sendOneString(con.pipe1,'host: <b>'+con.domain+' ('+ipAddr2string(con.tadr)+' '+BStr(con.tprt)+')</b><br>'#13#10);
      sendOneString(con.pipe1,'path: <b>'+con.uri+'</b><br>'#13#10);
      sendOneString(con.pipe1,'<hr><pre>'#13#10);
      if (length(con.uri)>2) then begin;
        sendOneString(con.pipe1,'<a href=/1/>root directory</a>'#13#10);
        sendOneString(con.pipe1,'<a href=/'+getParentDir(con.uri)+'>parent directory</a>'#13#10);
        end;
      con.stat:=99;
      exit;
      end;
    case con.method of
      1:a:='GET ';
      2:a:='POST ';
      3:a:='PUT ';
      else begin;
        sendMessage(con,'417 expectation failed','internal error occured while processing your request!');
        goto f1;
        end;
      end;
    sendOneString(con.pipe2,a);
    if (con.proto<>0) then a:='http' else a:='https';
    sendOneString(con.pipe2,a);
    sendOneString(con.pipe2,'://');
    sendOneString(con.pipe2,con.domain);
    sendOneString(con.pipe2,'/');
    sendOneString(con.pipe2,con.uri);
    sendOneString(con.pipe2,' HTTP/1.1'#13#10);
    con.stat:=100;
    end;
  6:begin; {begin connection}
    i:=con.proto;
    TCPprocessId:=processTCP;a:='tcp';
    case i of
      1:begin; TCPprocessId:=processSSH;a:='ssh'; end;
      2:begin; TCPprocessId:=processTLS;a:='tls'; end;
      end;
    if (TCPprocessId=0) then begin;
      sendMessage(con,'503 service unavailable','the protocol you requested ('+a+') is not running!');
      goto f1;
      end;
    WriteLn('connecting to '+a+' '+ipAddr2string(con.tadr)+' '+BStr(con.tprt)+'...');
    TCPbeginConnect(con.pipe2,65536,con.tadr,con.tprt);
    con.time:=CurrentTime;
    con.stat:=7;
    end;
  4:begin; {resolved}
    con.stat:=6;
    con.time:=CurrentTime;
    if (con.method=0) then con.stat:=5;
    if (con.proto in [1,3,4]) then con.stat:=5;
    end;
  3:begin; {resolving}
    end;
  0:goto f1; {disconnect}
  else begin; f1: con.stat:=0;doConn:=True;exit; end;
  end;
End;
