the system calls in BugOS are identified by a number...
note that every strings in this document are prefixed
with size byte, and does NOT terminate with zero character...
the way the system calls are invoked is the following:
sc                              ;coded as: 44h,00h,00h,02h
the function number must be in r1 register...
some calls require privileges...
here is the list of privileges:
*1 - privileged flag (rights and 40h<>0)

here is the list of system calls:

00000000h - terminate process...
            in: r2-exit code to return to caller...

00000001h - give away the control...

00000002h - give away the control... *1
            in: r2-process number to give...

00000003h - map system memory... *1
            in: r2-physical memory offset...
                r3-bytes to map in...
           out: r1-error code...
                r2-offset where mapped...
                r3-physical memory offset...
                r4-bytes mapped in...

00000004h - hook irq line... *1
            in: r2-irq number: 0..7...
                r3-offset of handler...
           out: r1-error code...

00000005h - unhook irq line...
            in: r2-irq number: 0..7...

00000006h - terminate irq handler...

00000007h - get total memory info...
           out: r1-total memory in pages...
                r2-kernel allocated memory in pages...
                r3-unused memory in pages...
                r4-size of page in bytes...

00000008h - get total system info...
           out: r1-number of processes...
                r2-number of pipelines...
                r3-number of open files...

00000009h - get other process info...
            in: r2-process id...
           out: r1-number of pages allocated...
                r2-number of pipelines...
                r3-number of open files...

0000000Ah - get other process name...
            in: r2-process id...
                r3-where to save process pathname and parameter...
           out: r1-user id...
                r2-parent process id...
                r3-rights...

0000000Bh - find process by number...
            in: r2-process sequence number: 0..max-1...
           out: r1-process id /0=error...

0000000Ch - find process by name...
            in: r2-process name to find...
           out: r1-process id /0=error...

0000000Dh - kill another process... *1
            in: r2-process id...

0000000Eh - get current process info...
           out: r1-process id...
                r2-parent process id...
                r3-rights...

0000000Fh - get current user info...
           out: r1-current user id...
                r2-original user id...

00000010h - set user info... *1
            in: r2-user id...

00000011h - get process pathname...
            in: r2-where to copy data...

00000012h - get process parameters...
            in: r2-where to copy data...

00000013h - start listening...
           out: r1-error code...

00000014h - stop listening...
           out: r1-error code...

00000015h - get next incoming pipeline...
           out: r1-error code...
                r2-new pipeline id...

00000016h - create new pipeline...
            in: r2-process id...
                r3-size in bytes...
                r4-block mode pipe...
           out: r1-error code...
                r2-new pipeline id...

00000017h - close pipeline side...
            in: r2-pipeline id...
           out: r1-error code...

00000018h - get pipeline info...
            in: r2-pipeline id...
           out: r1-error code...
                r2-process id of remote...
                r3-bytes free in tx buffer...
                r4-bytes waiting in rx buffer...

00000019h - nonblocking send through pipeline...
            in: r2-pipeline id...
                r3-buffer to send...
                r4-bytes in buffer...
           out: r1-error code...

0000001Ah - nonblocking receive through pipeline...
            in: r2-pipeline id...
                r3-buffer to receive...
                r4-max bytes to receive...
           out: r1-error code...
                r2-bytes received...

0000001Bh - get cpu info...
            in: r2-cpu number: 0..max-1...
                r3-where to get text in AsciiZ format...
           out: r1-number of processors...
                r2-cpu chip code...

0000001Ch - get kernel info...
            in: r2-where to get text in AsciiZ format...

0000001Dh - get kernel logo...
            in: r2-where to get text in AsciiZ format...

0000001Eh - get console status...
           out: r1-bytes free in tx buffer...
                r2-bytes waiting in rx buffer...

0000001Fh - write to console...
            in: r2-buffer to write...
                r3-bytes in buffer...

00000020h - read from console...
            in: r2-buffer to read to...
                r3-bytes to read...
           out: r1-bytes readed...

00000021h - check for process existence...
            in: r2-process id...
           out: r1-result: 0=no, 1=yes...

00000022h - get extended memory info...
           out: r1-size of extended memory in bytes...
                r2-offset of extended memory...

00000023h - resize extended memory...
            in: r2-new size of extended memory in bytes...
           out: r1-size of extended memory in bytes...
                r2-offset of extended memory...

00000024h - allocate continuous memory... *1
            in: r2-size of continuous memory in bytes...
           out: r1-error code...
                r2-size of continuous memory in bytes...
                r3-offset of continuous memory...
                r4-physical memory offset...

00000025h - get uptime info...
           out: r1-days since running...
                r2-ticks since last day change...
                r3-ticks per second...

00000026h - get uptime info...
           out: r1-ticks since last day change...

00000027h - get system date...
           out: r1-year...
                r2-month...
                r3-day...

00000028h - get system time...
           out: r1-hour...
                r2-minute...
                r3-second...

00000029h - login as drive letter... *1
            in: r2-drive letter...
                r3-buffer offset...
           out: r1-error code...

0000002Ah - logout as drive letter... *1
            in: r2-drive letter...
           out: r1-error code...

0000002Bh - get current directory...
            in: r2-where to copy current directory pathname...

0000002Ch - get number of missed irqs...
           out: r1-number of missed irqs...

0000002Dh - drop privileged flag...

0000002Eh - get data offset...
           out: r1-offset of data block...

0000002Fh - terminate drive handler...

00000030h - change current directory...
            in: r2-pathname of directory to change to...
           out: r1-error code...

00000031h - create directory...
            in: r2-pathname of new directory to create...
           out: r1-error code...

00000032h - erase directory...
            in: r2-pathname of directory to erase...
           out: r1-error code...

00000033h - create file...
            in: r2-pathname of new file to create...
           out: r1-error code...

00000034h - erase file...
            in: r2-pathname of file to erase...
           out: r1-error code...

00000035h - rename dir entry...
            in: r2-pathname of source entry...
                r3-pathname of target entry...
           out: r1-error code...

00000036h - make link to entry...
            in: r2-pathname of source entry...
                r3-pathname of target entry...
           out: r1-error code...

00000037h - set rights of entry...
            in: r2-pathname of file to affect...
                r3-rights to set...
                r4-owner to set...
           out: r1-error code...
          note: rights are the following:
                1h-readOwn, 2h-WriteOwn, 4h-execOwn,
                8h-readAny, 10h-writeAny, 20h-execAny,
                40h-hasRootPrivs, 80h-directory,
                100h-allowRead, 200h-allowWrite...

00000038h - set dates of entry...
            in: r2-pathname of file to affect...
                r3-offset to create,modify time...
           out: r1-error code...
          note: time has the following format:
                year:word
                month,day,hour,min,sec:byte

00000039h - get current drive statistics...
           out: r1-error code...
                r2-free blocks...
                r3-used blocks...
                r4-bad blocks...
                r5-block size in bytes...

0000003Ah - open directory...
            in: r2-pathname of directory...
           out: r1-error code...
                r2-handler of open directory...

0000003Bh - read directory...
            in: r2-handler of open directory...
                r3-where to get data...
           out: r1-error code...
          note: the data has the following structure:
                size,rights,owner:dword
                create,modify:time
                name:string[255]

0000003Ch - close directory...
            in: r2-handler of open directory...
           out: r1-error code...

0000003Dh - open file...
            in: r2-pathname of file...
                r3-access rights...
           out: r1-error code...
                r2-handler of open file...

0000003Eh - read from file...
            in: r2-handler of open file...
                r3-offset where to read...
                r4-bytes to read...
           out: r1-error code...

0000003Fh - write to file...
            in: r2-handler of open file...
                r3-offset where from write...
                r4-bytes to write...
           out: r1-error code...

00000040h - seek in file...
            in: r2-handler of open file...
                r3-position where to seek...
           out: r1-error code...

00000041h - get file size...
            in: r2-handler of open file...
           out: r1-error code...
                r2-size of file in bytes...

00000042h - get file position...
            in: r2-handler of open file...
           out: r1-error code...
                r2-file position...

00000043h - truncate file...
            in: r2-handler of open file...
           out: r1-error code...

00000044h - close file...
            in: r2-handler of open file...
           out: r1-error code...

00000045h - execute and wait...
            in: r2-pathname of file...
                r3-parameters to give...
           out: r1-error code...
                r2-exit code returned by process at successful termination...

00000046h - execute in background... *1
            in: r2-pathname of file...
                r3-parameters to give...
           out: r1-error code...
                r2-new process id...

00000047h - execute inside me... *1
            in: r2-pathname of file...
                r3-parameters to give...
           out: r1-error code...
                r2-new process id...
                r3-pipeline id of process's console...

00000048h - get system performance counters...
           out: r1-idle cycles executed...
                r2-rounds executed...
                r3-full rounds executed...
                r4-active processes started...

00000049h - get other process info...
            in: r2-process id...
           out: r1-working since ticks...
                r2-times process executed...
