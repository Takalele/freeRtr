org 0h
db 'exec'                       ;id
dd offset lastbyte              ;size
dd drvBuf__siz                  ;data
dd 512                          ;stack
;-------------------------------

stw r0,drvBuf_cmd(r30)
li r1,29h
li r2,driveLetter
or r3,r30,r30
sc                              ;login as drive letter...
or. r1,r1,r1
bc t,eq,waitCmd_j2
waitCmd_j1:
li r1,0
li r2,1
sc                              ;terminate process...
b waitCmd_j1
waitCmd_j2:
li r1,1
sc                              ;give away the control...
lwz r1,drvBuf_cmd(r30)
srwi r2,r1,31
or. r2,r2,r2
bc t,eq,waitCmd_j2
addi r1,r1,-1
andi. r1,r1,7fffh
slwi r1,r1,2
li r2,offset commandList_beg
add r1,r1,r2
li r2,offset commandList_end
sub. r2,r1,r2
bc f,lt,finishCmd_err
lwz r1,0(r1)
mtspr ctr,r1
bcctr a,eq
finishCmd_err:
li r1,1
b finishCmd_norm
finishCmd_ok:
li r1,0
finishCmd_norm:
andi. r1,r1,7fffh
stw r1,0(r30)
li r1,2fh
sc                              ;terminate drive handler...
b waitCmd_j2
;-------------------------------

;------------------------------- get path...
proc getPath
;in:  r1-where to put...
;out: r2-destroyed...
li r2,3
stb r2,0(r1)
li r2,driveLetter
stb r2,1(r1)
li r2,':'
stb r2,2(r1)
li r2,'\'
stb r2,3(r1)
bclr a,eq
endp
;-------------------------------

;------------------------------- lowercase a character...
proc lowerCase
;in:  r1-char...
;out: r1-char...
andi. r1,r1,0ffh
addi r1,r1,-65
or. r1,r1,r1
bc t,lt,lowerCase_j1
addi r1,r1,-25
or. r1,r1,r1
bc t,gt,lowerCase_j2
addi r1,r1,5ah
ori r1,r1,20h
bclr a,eq
lowerCase_j1:
addi r1,r1,41h
bclr a,eq
lowerCase_j2:
addi r1,r1,5ah
bclr a,eq
endp
;-------------------------------

;------------------------------- command list...
align 4h
commandList_beg:
dd offset command01,offset command02
dd offset finishCmd_err,offset finishCmd_err,offset finishCmd_err
dd offset finishCmd_err,offset finishCmd_err,offset finishCmd_err
dd offset finishCmd_err,offset finishCmd_err
dd offset command0B,offset command0C,offset command0D,offset command0E
dd offset finishCmd_err
dd offset command10,offset command11,offset command12,offset command13
commandList_end:
align 4h
;-------------------------------

;------------------------------- change directory: dir, fn1, usrID...
proc command01
addi r1,r30,drvBuf_fn1
bl getPath
b finishCmd_ok
endp
;-------------------------------

;------------------------------- drive statistics: data: free,used,bad,blockSize:dword...
proc command02
addi r1,r30,drvBuf_dat
lis r2,offset lastbyte
ori r2,r2,offset lastbyte
li r3,1
stw r0,0(r1)
stw r2,4(r1)
stw r0,8(r1)
stw r3,12(r1)
b finishCmd_ok
endp
;-------------------------------

;------------------------------- open directory: dir, fn1, usrID, hdr, data: inode,rights:dword; name:string...
proc command0B
addi r1,r30,drvBuf_fn1
bl getPath
stw r0,drvBuf_hdr(r30)
addi r1,r30,drvBuf_dat
li r2,6666h
stw r2,0(r1)
li r2,80h
stw r2,4(r1)
addi r1,r1,8
bl getPath
b finishCmd_ok
endp
;-------------------------------

;------------------------------- read directory: hdr, data: size,right,own:dword; create,modify:time; name:string...
proc command0C
addi r1,r30,drvBuf_dat
li r2,40h
command0C_j1:
stw r0,0(r1)
addi r1,r1,4
addi r2,r2,-1
or. r2,r2,r2
bc f,eq,command0C_j1
lwz r1,drvBuf_hdr(r30)
li r2,numberOfFiles
sub. r2,r1,r2
bc f,lt,finishCmd_ok
addi r2,r1,1
stw r2,drvBuf_hdr(r30)
slwi r1,r1,3
lwz r1,offset dataBegin(r1)
addi r2,r30,drvBuf_dat
li r3,40h
command0C_j2:
lwz r4,0(r1)
stw r4,0(r2)
addi r1,r1,4
addi r2,r2,4
addi r3,r3,-1
or. r3,r3,r3
bc f,eq,command0C_j2
b finishCmd_ok
endp
;-------------------------------

;------------------------------- open file: dir, fn1, right, usrID, hdr, data: inode,rights:dword; name:string...
proc command0D
addi r2,r30,drvBuf_fn1
addi r3,r30,drvBuf_fn1
lbz r4,0(r2)
command0D_j1:
or. r4,r4,r4
bc t,eq,command0D_j2
addi r2,r2,1
lbz r1,0(r2)
bl lowerCase
stb r1,0(r3)
addi r3,r3,1
addi r4,r4,-1
addi r1,r1,-92
or. r1,r1,r1
bc f,eq,command0D_j1
addi r3,r30,drvBuf_fn1
b command0D_j1
command0D_j2:
stb r0,0(r3)
li r2,numberOfFiles
li r3,offset dataBegin
command0D_j3:
or. r2,r2,r2
bc t,eq,finishCmd_err
lwz r4,0(r3)
lwz r5,4(r3)
addi r2,r2,-1
addi r3,r3,8
addi r6,r4,27
addi r7,r30,drvBuf_fn1
command0D_j4:
lbz r1,0(r6)
lbz r8,0(r7)
addi r6,r6,1
addi r7,r7,1
bl lowerCase
sub. r1,r1,r8
bc f,eq,command0D_j3
or. r8,r8,r8
bc f,eq,command0D_j4
addi r3,r30,drvBuf_hdr
lwz r1,0(r4)
stw r0,0(r3)                    ;+0 position...
stw r1,4(r3)                    ;+4 size...
stw r5,8(r3)                    ;+8 binary...
addi r3,r30,drvBuf_dat
stw r2,0(r3)
lwz r1,4(r4)
stw r1,4(r3)
addi r1,r3,8
bl getPath
addi r2,r4,26
lbz r3,0(r1)
lbz r4,0(r2)
add r5,r4,r3
stb r5,0(r1)
add r1,r1,r3
command0D_j5:
addi r1,r1,1
addi r2,r2,1
or. r4,r4,r4
bc t,eq,finishCmd_ok
lbz r3,0(r2)
stb r3,0(r1)
addi r4,r4,-1
b command0D_j5
endp
;-------------------------------

;------------------------------- read file: hdr, size, data...
proc command0E
addi r9,r30,drvBuf_hdr
lwz r8,drvBuf_siz(r30)
lwz r7,4(r9)
lwz r6,0(r9)
lwz r5,8(r9)
add r1,r6,r8
sub. r2,r1,r7
bc t,gt,finishCmd_err
stw r1,0(r9)
add r1,r5,r6
addi r2,r30,drvBuf_dat
command0E_j1:
or. r8,r8,r8
bc t,eq,finishCmd_ok
lbz r3,0(r1)
stb r3,0(r2)
addi r1,r1,1
addi r2,r2,1
addi r8,r8,-1
b command0E_j1
endp
;-------------------------------

;------------------------------- seek file: hdr, data: position:dword...
proc command10
addi r9,r30,drvBuf_hdr
lwz r1,drvBuf_dat(r30)
stw r1,0(r9)
b finishCmd_ok
endp
;-------------------------------

;------------------------------- get file size: hdr, data: filesize:dword...
proc command11
addi r9,r30,drvBuf_hdr
lwz r1,4(r9)
stw r1,drvBuf_dat(r30)
b finishCmd_ok
endp
;-------------------------------

;------------------------------- get file pos: hdr, data: position:dword...
proc command12
addi r9,r30,drvBuf_hdr
lwz r1,0(r9)
stw r1,drvBuf_dat(r30)
b finishCmd_ok
endp
;-------------------------------

;------------------------------- truncate file: hdr...
proc command13
addi r9,r30,drvBuf_hdr
lwz r1,0(r9)
lwz r2,4(r9)
sub. r1,r1,r2
bc f,eq,finishCmd_err
b finishCmd_ok
endp
;-------------------------------

;------------------------------- drive buffer layout...
drvBuf_cmd equ 000h             ;dd: command/result code...
drvBuf_usr equ 004h             ;dd: user who wants to do...
drvBuf_rgt equ 008h             ;dd: rights what user wants to do...
drvBuf_siz equ 00ch             ;dd: buffer size...
drvBuf_dir equ 010h             ;256: current directory...
drvBuf_fn1 equ 110h             ;256: pathname #1...
drvBuf_fn2 equ 210h             ;256: pathname #2...
drvBuf_hdr equ 310h             ;512: file handle...
drvBuf_dat equ 510h             ;64k: data buffer...
drvBuf__siz equ 10510h          ;size of structure...
;-------------------------------

;-------------------------------
driveLetter equ 64              ;the '@' char...
align 10h
;X;
align 4
dd 0
lastbyte:
;-------------------------------
