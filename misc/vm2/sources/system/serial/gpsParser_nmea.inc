Procedure gpsParser(bb:Byte);
Var
  bc:char absolute bb;
  i,o,p:LongInt;
  a,b:string;

function get:string;
var i:longint;
begin;
i:=pos(',',b);
if (i<1) then i:=666;
get:=copy(b,1,i-1);
b:=copy(b,i+1,666);
end;

function egesz(a:string):string;
var i:longint;
begin;
i:=pos('.',a);
if (i<1) then i:=666;
egesz:=copy(a,1,i-1);
end;

function str2coord(a:String):longint;
var i:longint;
begin;
i:=pos('.',a);
if (i>0) then a:=copy(a,1,i-1)+copy(a,i+1,255);
while (length(a)<9) do a:='0'+a;
i:=bval(copy(a,4,6));
i:=(i*1000) div 60;
str2coord:=(bval(copy(a,1,3))*10000000)+i;
end;

Begin;
if (bb<>13) then begin;
  if (bb<32) then exit;
  gpsReaded:=gpsReaded+bc;
  exit;
  end;
b:=gpsReaded;
gpsReaded:='';
if (copy(b,1,1)<>'$') then exit;
b:=copy(b,2,666);
if (copy(b,length(b)-2,1)='*') then begin;
  o:=0;
  for i:=1 to length(b)-3 do o:=o xor ord(b[i]);
  if (bval('$'+copy(b,length(b)-1,666))<>o) then exit;
  b:=copy(b,1,length(b)-3);
  end;
a:=get;
if (a='GPGGA') then begin;
  gpsTime:=bval(egesz(get));
  gpsCoordY:=str2coord(get);
  if (get<>'N') then gpsCoordY:=-gpsCoordY;
  gpsCoordX:=str2coord(get);
  if (get<>'E') then gpsCoordX:=-gpsCoordX;
  gpsCoordFix:=(bval(get)>0);
  gpsSatellites:=bval(get);
  gpsPrecise:=bval(egesz(get));
  gpsCoordZ:=bval(egesz(get));
  gpsChanged:=currentTime;
  exit;
  end;
if (a='GPGLL') then begin;
  gpsCoordY:=str2coord(get);
  if (get<>'N') then gpsCoordY:=-gpsCoordY;
  gpsCoordX:=str2coord(get);
  if (get<>'E') then gpsCoordX:=-gpsCoordX;
  gpsTime:=bval(egesz(get));
  gpsCoordFix:=(get='A');
  gpsChanged:=currentTime;
  exit;
  end;
if (a='GPGSA') then begin;
  get;
  gpsCoordFix:=(bval(get)>1);
  for i:=1 to 12 do get;
  o:=0;
  for i:=1 to 3 do begin;
    p:=bval(egesz(get));;
    if (p>o) then o:=p;
    end;
  gpsPrecise:=o;
  gpsChanged:=currentTime;
  exit;
  end;
if (a='GPGSV') then begin;
  exit;
  end;
if (a='GPMSS') then begin;
  exit;
  end;
if (a='GPRMC') then begin;
  gpsTime:=bval(egesz(get));
  gpsCoordFix:=(get='A');
  gpsCoordY:=str2coord(get);
  if (get<>'N') then gpsCoordY:=-gpsCoordY;
  gpsCoordX:=str2coord(get);
  if (get<>'E') then gpsCoordX:=-gpsCoordX;
  gpsSpeed:=bval(egesz(get))*2;
  gpsCourse:=bval(egesz(get));
  a:=get;
  gpsDate:=(bval(copy(a,5,2))*10000)+(bval(copy(a,3,2))*100)+bval(copy(a,1,2));
  gpsChanged:=currentTime;
  exit;
  end;
if (a='GPVTG') then begin;
  gpsCourse:=bval(egesz(get));
  get;get;get;
  gpsSpeed:=bval(egesz(get))*2;
  gpsChanged:=currentTime;
  exit;
  end;
if (a='GPZDA') then begin;
  gpsTime:=bval(egesz(get));
  gpsDate:=bval(get);
  inc(gpsDate,bval(get)*100);
  inc(gpsDate,bval(get)*10000);
  gpsChanged:=currentTime;
  exit;
  end;
if (a='PGPS1') then begin;
  gpsCoordFix:=(BVal(get)>=3);
  get;a:=get;
  gpsTime:=bval(copy(a,1,6));
  gpsDate:=bval(copy(a,10,2));
  inc(gpsDate,bval(copy(a,12,2))*100);
  inc(gpsDate,bval(copy(a,16,2))*10000);
  a:=get;
  gpsCoordY:=str2coord(copy(a,2,666));
  if (copy(a,1,1)<>'N') then gpsCoordY:=-gpsCoordY;
  a:=get;
  gpsCoordX:=str2coord(copy(a,2,666));
  if (copy(a,1,1)<>'E') then gpsCoordX:=-gpsCoordX;
  gpsSatellites:=BVal(get);
  i:=BVal(get);
  if (i<gpsSatellites) then gpsSatellites:=i;
  gpsSpeed:=bval(egesz(get));
  gpsCourse:=bval(egesz(get));
  gpsCoordZ:=bval(egesz(get));
  gpsPrecise:=0;
  for i:=1 to 3 do inc(gpsPrecise,bval(egesz(get)));
  gpsPrecise:=gpsPrecise div 3;
  gpsChanged:=currentTime;
  exit;
  end;
End;




Procedure gspPrepare(var buffer;var size:LongInt);
Const hex:array[0..15] of byte=($30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$41,$42,$43,$44,$45,$46);
Var
  buf:array[1..1] of byte absolute buffer;
  i,o:LongInt;
procedure put(i:LongInt);begin; inc(size);buf[size]:=i; end;
Begin;
o:=0;
for i:=2 to size do o:=o xor buf[i];
o:=o and $ff;
put(42);
put(hex[o shr 4]);
put(hex[o and 15]);
put(13);
put(10);
End;
