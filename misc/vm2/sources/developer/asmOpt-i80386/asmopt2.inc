Procedure ClearValuesForProc;
Begin;
fillchar(StackValues,sizeof(StackValues),0);
StackPointer:=0;
fillchar(MemoryValues,sizeof(MemoryValues),0);
MemoryPointer:=0;
OneValueWrite('eax',GetInvData,0);
OneValueWrite('ebx',GetInvData,0);
OneValueWrite('ecx',GetInvData,0);
OneValueWrite('edx',GetInvData,0);
OneValueWrite('esi',GetInvData,0);
OneValueWrite('edi',GetInvData,0);
OneValueWrite('esp',GetInvData,0);
OneValueWrite('ebp',GetInvData,0);
OneValueWrite('eflag',GetInvData,0);
OneValueWrite('ds',GetInvData,0);
OneValueWrite('es',GetInvData,0);
OneValueWrite('cs',GetInvData,0);
OneValueWrite('ss',GetInvData,0);
OneValueWrite('fs',GetInvData,0);
OneValueWrite('gs',GetInvData,0);
End;


Procedure ProcessCurrentInstruction(ln:LongInt);
Var
  i:LongInt;
  a,b:String;
Begin;
a:=OpCode[0];
if (OpCode[1]='equ') then exit;
if (a='proc') then begin;
  ClearValuesForProc;
  exit;
  end;
if (a='endp') then begin;
  ClearValuesForProc;
  exit;
  end;
if (a='jmp') then exit;
if (a='db') then exit;
if (a='dw') then exit;
if (a='dd') then exit;
if isThisBeg(a,'j') then exit;
if (a='nop') then exit;
if (a='clc') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='stc') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='cmc') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='cli') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='sti') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='cld') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='std') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='hlt') then exit;
if (a='clts') then begin; OneValueWrite('eflag',GetInvData,ln);exit; end;
if isThisBeg(a,'rep') or isThisBeg(a,'repe') or isThisBeg(a,'repne') then begin;
  OneValueWrite('ecx',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'ret') then exit;
if isThisBeg(a,'iret') then exit;
if (a='jcxz') or (a='jecxz') then exit;
if isThisBeg(a,'loop') then begin;
  ClearValuesForProc;
  exit;
  end;
if (a='inc') or (a='dec') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'lods') then begin;
  OneValueWrite('eax',GetInvData,ln);
  OneValueWrite('esi',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'stos') or isThisBeg(a,'ins') then begin;
  OneValueWrite('edi',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'scas')then begin;
  OneValueWrite('edi',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='movzx') or (a='movsx') then begin;
  b:=OneValueRead(OpCode[2],true);
  OneValueWrite(OpCode[1],b,ln);
  exit;
  end;
if isThisBeg(a,'movs') then begin;
  OneValueWrite('esi',GetInvData,ln);
  OneValueWrite('edi',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'cmps') then begin;
  OneValueWrite('esi',GetInvData,ln);
  OneValueWrite('edi',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'outs') then begin;
  OneValueWrite('esi',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'add') or isThisBeg(a,'sub') or isThisBeg(a,'test')
 or isThisBeg(a,'xor') or isThisBeg(a,'or') or isThisBeg(a,'and')
 or isThisBeg(a,'sbb') or isThisBeg(a,'adc') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'cmp') then begin;
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='xchg') then begin;
  a:=OneValueRead(OpCode[1],true);
  b:=OneValueRead(OpCode[2],true);
  OneValueWrite(OpCode[1],b,ln);
  OneValueWrite(OpCode[2],a,ln);
  exit;
  end;
if (a='shr') or (a='shl') or (a='ror') or (a='rol')
 or (a='rcr') or (a='rcl') or (a='sar') or (a='sal') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='not') or (a='neg') or (a='bswap') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='imul') and (OpCode[2]='') then a:='mul';
if (a='mul') or (a='div') or (a='idiv') then begin;
  OneValueWrite('eax',GetInvData,ln);
  OneValueWrite('edx',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='imul') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='in') then begin; OneValueWrite(OpCode[1],GetInvData,ln);exit; end;
if (a='out') then exit;
if (a='les') or (a='lds') or (a='lss') or (a='lfs') or (a='lgs') then begin;
  OneValueWrite(a[2]+a[3],GetInvData,ln);
  OneValueWrite(OpCode[1],GetInvData,ln);
  exit;
  end;
if (a='lea') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'cmov') or isThisBeg(a,'set') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  exit;
  end;
if (a='setalc') or (a='xlat') or (a='xlatb') then begin;
  OneValueWrite('al',GetInvData,ln);
  exit;
  end;
if (a='lock') or (a='wait') or (a='fwait') then exit;
if (a='esc') then begin;
  OneValueWrite('eax',GetInvData,ln);
  exit;
  end;
if (a='int') then begin;
  ClearValuesForProc;
  exit;
  end;
if (a='call') then begin;
  ClearValuesForProc;
  exit;
  end;
if (copy(a,length(a),255)=':') then begin;
  ClearValuesForProc;
  exit;
  end;
if (a='oio') or (a='ud') or (a='ud2') then exit;
if (a='invd') or (a='wbinvd') then exit;
if (a='into') or (a='int3') or (a='bound') or (a='icebp') then exit;
if (a='sahf') then begin; OneValueWrite('flag',GetInvData,ln);exit; end;
if (a='lahf') then begin; OneValueWrite('ah',GetInvData,ln);exit; end;
if (a='enter') then begin;
  b:=OneValueRead('ebp',false);
  StackDataPushOne(b,0);
  exit;
  end;
if (a='leave') then begin;
  b:=StackDataPopOne;
  OneValueWrite('ebp',b,ln);
  exit;
  end;
if (a='invlpg') then exit;
if (a='aaa') or (a='aas') or (a='aam') or (a='aad') then begin;
  OneValueWrite('ax',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='daa') or (a='das') then begin;
  OneValueWrite('al',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='bsf') or (a='bsr') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='bt') then begin;
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='btc') or (a='bts') or (a='btr') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='cbw') then begin;
  OneValueWrite('ax',GetInvData,ln);
  exit;
  end;
if (a='cdq') then begin;
  OneValueWrite('edx',GetInvData,ln);
  exit;
  end;
if (a='cwd') then begin;
  OneValueWrite('dx',GetInvData,ln);
  exit;
  end;
if (a='cwde') then begin;
  OneValueWrite('eax',GetInvData,ln);
  exit;
  end;
if (a='shrd') or (a='shld') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='sldt') or (a='str') or (a='smsw') or (a='lar') or (a='lsl') then begin;
  OneValueWrite(OpCode[1],GetInvData,ln);
  exit;
  end;
if (a='lldt') or (a='ltr') or (a='lmsw') or (a='arpl') then exit;
if (a='verr') or (a='verw') then begin;
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='sgdt') or (a='sidt') or (a='lgdt') or (a='lidt') then exit;
if (a='xadd') then begin;
  a:=OneValueRead(OpCode[1],true);
  OneValueWrite(OpCode[2],a,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='cmpxchg8b') then begin;
  OneValueWrite('eax',GetInvData,ln);
  OneValueWrite('edx',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  exit;
  end;
if (a='cmpxchg') then begin;
  OneValueWrite('eax',GetInvData,ln);
  OneValueWrite('flag',GetInvData,ln);
  OneValueWrite(OpCode[2],GetInvData,ln);
  exit;
  end;
if (a='rsm') or (a='wrmsr') then exit;
if (a='rdmsr') or (a='rdpmc') or (a='rdtsc') then begin;
  OneValueWrite('eax',GetInvData,ln);
  OneValueWrite('edx',GetInvData,ln);
  exit;
  end;
if (a='cpuid') then begin;
  OneValueWrite('eax',GetInvData,ln);
  OneValueWrite('ebx',GetInvData,ln);
  OneValueWrite('ecx',GetInvData,ln);
  OneValueWrite('edx',GetInvData,ln);
  exit;
  end;
if isThisBeg(a,'pushf') then begin; a:='push';OpCode[1]:='eflag'; end;
if isThisBeg(a,'popf') then begin; a:='pop';OpCode[1]:='eflag'; end;

if (a='push') then begin;
  a:=OpCode[1];
  b:=OneValueRead(a,true);
  b:=a+'='+b;
  StackDataPushOne(b,ln);
  exit;
  end;
if (a='pop') then begin;
  a:=StackDataPopOne;
  i:=pos('=',a);
  if (i<>0) then a:=copy(a,i+1,255);
  OneValueWrite(OpCode[1],a,ln);
  exit;
  end;
if (a='mov') then begin;
  b:=OneValueRead(OpCode[2],true);
  OneValueWrite(OpCode[1],b,ln);
  exit;
  end;
End;
