--- @compiler prefix-code
org 0h
firstbyte:

mov r12,offset lastbyte
orr r12,r12,offset lastbyte!8
orr r12,r12,offset lastbyte!16
orr r12,r12,offset lastbyte!24
mov r0,procTable_max
orr r0,r0,procTable_max!8
add r12,r12,r0 lsl 2
add r12,r12,20h
mov r0,program_stack
orr r0,r0,program_stack!8
orr r0,r0,program_stack!16
orr r0,r0,program_stack!24
add r12,r12,r0
mov sp,r12
add r12,r12,20h

b program_main
;-----------------------------------------------------------

;-----------------------------------------------------------
proc div32u
;in:  r0-divident...
;     r1-divisor...
;out: r2-remainder...
;     r3-result...
mov r2,1                        ;current bit...
mov r3,0                        ;the result...
cmp r1,0
bxeq lr
div32u_j1:
tst r1,80000000h!24
bne div32u_j2
cmp r0,r1
blo div32u_j2
mov r1,r1 lsl 1
mov r2,r2 lsl 1
b div32u_j1
div32u_j2:
cmp r0,r1
subhs r0,r0,r1
orrhs r3,r3,r2
mov r1,r1 lsr 1
mov r2,r2 lsr 1
cmp r2,0
bne div32u_j2
mov r2,r0
bx lr
endp
;-----------------------------------------------------------

;-----------------------------------------------------------
proc div32s
;in:  r0-divident...
;     r1-divisor...
;out: r2-remainder...
;     r3-result...
;     r4-destroyed...
bic r4,lr,3
tst r0,80000000h!24
orrne r4,r4,3
rsbne r0,r0,0
tst r1,80000000h!24
eorne r4,r4,2
rsbne r1,r1,0
bl div32u
bic lr,r4,3
tst r4,2
rsbne r3,r3,0
tst r4,1
rsbne r2,r2,0
bx lr
endp
;-----------------------------------------------------------

---

--- @compiler postfix-code
;-----------------------------------------------------------
align 10h
lastbyte:
---






--- terminate
mov r0,r6
swi 900001h
---

--- memcopy
cmp r8,0
beq @_j2
@_j1:
ldrb r0,[r10]
strb r0,[r11]
add r10,r10,1
add r11,r11,1
subs r8,r8,1
bne @_j1
@_j2:
---

--- memfillbyte
cmp r8,0
beq @_j2
@_j1:
strb r6,[r11]
add r11,r11,1
subs r8,r8,1
bne @_j1
@_j2:
---

--- memcopy2
cmp r8,0
beq @_j3
cmp r10,r11
bhi @_j2
add r10,r10,r8
add r11,r11,r8
@_j1:
sub r10,r10,1
sub r11,r11,1
ldrb r0,[r10]
strb r0,[r11]
subs r8,r8,1
bne @_j1
b @_j3
@_j2:
ldrb r0,[r10]
strb r0,[r11]
add r10,r10,1
add r11,r11,1
subs r8,r8,1
bne @_j2
@_j3:
---

--- codecopy
cmp r8,0
beq @_j2
@_j1:
ldrb r0,[r10]
strb r0,[r11]
add r10,r10,1
add r11,r11,1
subs r8,r8,1
bne @_j1
@_j2:
---
