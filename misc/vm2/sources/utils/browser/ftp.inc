Procedure decodeCurrentFtp(var t:xtText);
Var
  lastPosWin:LongInt;
  lastPosUnix:LongInt;

Function styleWin(s:String):Boolean;
Var
  a,b:String;
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;
  bb:Boolean;
  i:LongInt;
Begin;
styleWin:=false;
b:=s;
a:=GetNextWord(s);
if (ab0<>8) or (ab[3]<>45) or (ab[6]<>45) then exit;
a:=GetNextWord(s);
if (ab0<>7) or (ab[3]<>58) or (lowCase(a[7])<>'m') then exit;
a:=GetNextWord(s);
bb:=(kicsi(a)='<dir>');
getSpacesFromBegin(s);
i:=length(b)-length(s)-1;
if (b[lastPosWin]=' ') then i:=lastPosWin;
lastPosWin:=i;
inc(i);
s:=copy(b,i+1,666);
outputAddText(copy(b,1,i));
a:=s;
if bb then a:=a+'/';
outputAddLink(a,s);
outputWriteBuf;
styleWin:=true;
End;

Function styleUnix(s:String):Boolean;
Var
  a,b:String;
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;
  bb:Boolean;
  i,o:LongInt;
Begin;
styleUnix:=false;
a:=s;
a:=GetNextWord(a);
if (length(a)<>10) then exit;
bb:=(lowCase(a[1]) in ['l','d']);
a:=copy(a,2,666);
kicserel('r','',a);
kicserel('w','',a);
kicserel('x','',a);
kicserel('-','',a);
if (ab0<>0) then exit;
i:=pos(' -> ',s);
if (i=0) then i:=666;
b:=copy(s,i+4,255);
s:=copy(s,1,i-1);
o:=666;
for i:=1 to length(s) do if (s[i]=' ') then o:=i;
if (s[lastPosUnix]=' ') then o:=lastPosUnix;
lastPosUnix:=o;
inc(o);
a:=copy(s,o,255);
s:=copy(s,1,o-1);
outputAddText(s);
s:=a;
if bb then a:=a+'/';
outputAddLink(a,s);
if (b<>'') then begin;
  outputAddText(' -> ');
  a:=b;
  if bb then a:=a+'/';
  outputAddLink(a,b);
  end;
outputWriteBuf;
styleUnix:=true;
End;

Function styleVms(s:String):Boolean;
Var
  a,b:String;
  ab:array[0..1] of byte absolute a;
  ab0:byte absolute a;
  bb:Boolean;
  i,o,p:LongInt;
Begin;
styleVms:=false;
p:=pos(';',s);
if (p<1) then exit;
a:=copy(s,p+1,666);
o:=666;
for i:=ab0 downto 1 do if (ab[i]=32) then o:=i;
if (bval(copy(a,1,o-1))<1) then exit;
bb:=(kicsi(copy(s,p-4,4))='.dir');
if bb then dec(p,4);
a:=copy(s,1,p-1);
b:=a;
if bb then a:=a+'/';
outputAddLink(a,b);
outputAddText(copy(s,p,666));
outputWriteBuf;
styleVms:=true;
End;


Var a:String;
Begin;
lastPosWin:=1;
lastPosUnix:=1;
outputAddLink('/','root');outputWriteBuf;
outputAddLink('../','parent');outputWriteBuf;
while not xtEOF(t) do begin;
  a:=xtReadLn(t,666);
  if styleWin(a) then continue;
  if styleUnix(a) then continue;
  if styleVms(a) then continue;
  outputAddText(a);
  outputWriteBuf;
  end;
End;
