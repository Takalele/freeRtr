Const
  execRetrn=-100001;
  execBreak=-100002;
Function executeOneCommand(var res:oneStringType):LongInt;




Function getNextWord(var trg,src:oneStringType;var ps:LongInt;params:LongInt):LongInt;
Var
  i,o,p:LongInt;
  e:oneStringType;
  oldParams:LongInt;
  a:String;
  ab:array[0..255] of byte absolute a;
  a0:byte absolute a;

function getByte:LongInt;
var i:LongInt;
begin;
inc(ps);
if (ps>oneStringMaxSize) then i:=0 else i:=src[ps];
if (i=13) then begin;
  if (params and 1<>0) then i:=32 else i:=0;
  end;
if (i=0) then dec(ps);
getByte:=i;
End;

procedure skipComment;
begin;
params:=0;
while (getByte<>0) do getByte;
params:=oldParams;
end;

procedure skipSpace;
begin;
repeat
  i:=getByte;
  if (i=0) then exit;
  if (i=35) then begin; skipComment;i:=32; end;
  until not (i in [9,32,255]);
dec(ps);
end;

procedure addByte(i:LongInt);
begin;
if (p>=oneStringMaxSize) then begin; trg[oneStringMaxSize+1]:=0;exit; end;
inc(p);
trg[p]:=i;
trg[p+1]:=0;
end;

function getWord(finch:String):LongInt;
label f1,f2;
begin;
getWord:=0;
f1:
i:=getByte;
if (i=35) then begin; { # }
  skipComment;
  goto f1;
  end;
if (i=92) then begin; { \ }
  i:=getByte;
  if (i in [0,13]) then goto f2;
  case chr(i) of
    'b':i:=8;
    'B':i:=92;
    'c':begin;
      i:=getByte;
      if (i=0) then goto f2;
      i:=i and $1f;
      end;
    'e':i:=27;
    'f':i:=9;
    'n':i:=10;
    'r':i:=13;
    't':i:=9;
    'v':i:=9;
    'x':i:=BVal('$'+chr(getByte)+chr(getByte)+chr(getByte));
    '0':i:=32;
    ' ':i:=32;
    '\':i:=92;
    '$':i:=36;
    end;
  addByte(i);
  goto f1;
  end;
if (i=36) then begin; { $ }
  if (params and 2<>0) then begin; addByte(i);goto f1; end;
  o:=ps;
  a0:=0;
  params:=0;
  repeat
    i:=getByte;
    inc(a0);
    ab[a0]:=i;
    until not (i in [48..57,97..122,65..90,95]);
  params:=oldParams;
  if (i<>0) then dec(ps);
  dec(a0);
  i:=memoryFindCurr(a,strTyp_var);
  if (i<0) then begin; getWord:=o;goto f2; end;
  memoryRead(e,i,o,a);
  stringAppend(trg,e);
  p:=stringLength(trg);
  goto f1;
  end;
if (i=91) then begin; { [ }
  if (params and 4<>0) then begin; addByte(i);goto f1; end;
  o:=ps;
  if stringFindChar(src,ps,93) then begin; getWord:=ps;goto f2; end;
  i:=ps-o-1;
  move(src[o+1],e,i);
  e[i+1]:=0;
  i:=executeOneCommand(e);
  if (i<>0) then begin; getWord:=o;goto f2; end;
  stringAppend(trg,e);
  p:=stringLength(trg);
  goto f1;
  end;
if (i in [0,13]) then goto f2;
if (pos(chr(i),finch)<>0) then goto f2;
addByte(i);
goto f1;
f2:
addByte(0);
end;

Begin;
oldParams:=params;
skipSpace;
if (params=256) then exit;
stringClear(trg);
p:=0;
if (i=34) then begin;
  inc(ps);
  o:=getWord('"');
  end else begin;
  o:=getWord(#9#32#255);
  end;
addByte(0);
skipSpace;
getNextWord:=o;
End;





Function testForEndOfLine(var ps:LongInt;var cmd:oneStringType):LongInt;
Var
  a:oneStringType;
  i,o:LongInt;
Begin;
testForEndOfLine:=ps;
i:=getNextWord(a,cmd,ps,0);
if (i<>0) then exit;
if (a[1]<>0) then exit;
testForEndOfLine:=0;
End;



Function getCmdBlock(var trg,src:oneStringType;var ps:LongInt):Boolean;
Var i:LongInt;
Begin;
getCmdBlock:=true;
getNextWord(trg,src,ps,256);
if (src[ps+1]=123) then begin;
  inc(ps);
  i:=ps;
  if stringFindChar(src,ps,125) then exit;
  stringRange(trg,src,i+1,ps-i-1);
  end else begin;
  i:=getNextWord(trg,src,ps,2);
  if (i<>0) then exit;
  end;
getCmdBlock:=false;
End;




Label f1;
Var
  cmd,e,f,g,h:oneStringType;
  ps,i,o,p:LongInt;
  a:String;
Begin;
stringCopy(cmd,res);
stringClear(res);
stringPadup(cmd);
ps:=0;
f1:
p:=ps;
i:=getNextWord(e,cmd,ps,1);
executeOneCommand:=i;if (i<>0) then exit;
executeOneCommand:=p+1;
a:=string2pascal(e);
if (a='') then begin;
  executeOneCommand:=0;
  exit;
  end;
if (a='if') then begin;
  pascal2string('expr ',e);
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  stringAppend(e,f);
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  p:=ps;
  i:=getNextWord(g,cmd,ps,1);
  if (i<>0) then stringClear(g);
  if (string2pascal(g)<>'else') then begin;
    stringClear(g);
    ps:=p;
    end else begin;
    executeOneCommand:=ps;
    if getCmdBlock(g,cmd,ps) then exit;
    end;
  if (executeOneCommand(e)<>0) then exit;
  if (BVal(string2pascal(e))<>0) then stringCopy(res,f) else stringCopy(res,g);
  case executeOneCommand(res) of
    0:;
    execBreak:begin; executeOneCommand:=execRetrn;exit; end;
    execRetrn:begin; executeOneCommand:=execRetrn;exit; end;
    else begin; executeOneCommand:=ps;exit; end;
    end;
  goto f1;
  end;
if (a='expr') then begin;
  p:=ps;
  stringClear(f);
  p:=ps;
  repeat
    pascal2string(' ',e);
    stringAppend(f,e);
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringAppend(f,e);
    until (string2pascal(e)='');
  executeOneCommand:=p;
  calcOneConst(f,res);
  if (res[1]=0) then exit;
  goto f1;
  end;
if (a='set') then begin;
  i:=getNextWord(e,cmd,ps,0);
  a:=string2pascal(e);
  if (a='') then i:=ps;
  executeOneCommand:=i;if (i<>0) then exit;
  i:=getNextWord(res,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  memoryPush(res,strTyp_var,a);
  goto f1;
  end;
if (a='incr') then begin;
  p:=ps;
  i:=getNextWord(e,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  a:=string2pascal(e);
  o:=memoryFindCurr(a,strTyp_var);
  if (o<0) then begin; executeOneCommand:=ps;exit; end;
  memoryRead(res,o,i,a);
  i:=getNextWord(e,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  if (stringLength(e)<1) then pascal2string('1',e);
  pascal2string('+',f);
  stringAppend(e,f);
  stringAppend(e,res);
  executeOneCommand:=p;
  calcOneConst(e,res);
  if (res[1]=0) then exit;
  memoryPush(res,strTyp_var,a);
  goto f1;
  end;
if (a='for') then begin;
  executeOneCommand:=ps;
  if getCmdBlock(e,cmd,ps) then exit;
  if (executeOneCommand(e)<>0) then exit;
  pascal2string('expr ',e);
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  stringAppend(e,f);
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  executeOneCommand:=ps;
  if getCmdBlock(g,cmd,ps) then exit;
  while (1=1) do begin;
    stringCopy(h,e);
    if (executeOneCommand(h)<>0) then exit;
    if (BVal(string2pascal(h))=0) then break;
    stringCopy(h,g);
    if (executeOneCommand(h)<>0) then exit;
    stringCopy(h,f);
    case executeOneCommand(h) of
      0:continue;
      execBreak:break;
      execRetrn:begin; executeOneCommand:=execRetrn;exit; end;
      else exit;
      end;
    end;
  stringClear(res);
  goto f1;
  end;
if (a='foreach') then begin;
  executeOneCommand:=ps;
  executeOneCommand:=ps;
  if getCmdBlock(e,cmd,ps) then exit;
  a:=string2pascal(e);
  executeOneCommand:=ps;
  if getCmdBlock(e,cmd,ps) then exit;
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  executeOneCommand:=ps;
  p:=0;
  while (1=1) do begin;
    i:=getNextWord(g,e,p,7);
    if (i<>0) then exit;
    if (g[1]=0) then break;
    memoryPush(g,strTyp_var,a);
    stringCopy(g,f);
    case executeOneCommand(g) of
      0:continue;
      execBreak:break;
      execRetrn:begin; executeOneCommand:=execRetrn;exit; end;
      else exit;
      end;
    end;
  stringClear(res);
  goto f1;
  end;
if (a='while') then begin;
  pascal2string('expr ',e);
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  stringAppend(e,f);
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  executeOneCommand:=ps;
  while (1=1) do begin;
    stringCopy(g,e);
    if (executeOneCommand(g)<>0) then exit;
    if (BVal(string2pascal(g))=0) then break;
    stringCopy(g,f);
    case executeOneCommand(g) of
      0:continue;
      execBreak:break;
      execRetrn:begin; executeOneCommand:=execRetrn;exit; end;
      else exit;
      end;
    end;
  stringClear(res);
  goto f1;
  end;
if (a='continue') then begin;
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  executeOneCommand:=0;
  exit;
  end;
if (a='return') then begin;
  i:=getNextWord(res,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  executeOneCommand:=execRetrn;
  exit;
  end;
if (a='break') then begin;
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  executeOneCommand:=execBreak;
  exit;
  end;
if (a='string') then begin;
  i:=getNextWord(e,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  a:=string2pascal(e);
  if (a='bytelength') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    pascal2string(BStr(stringLength(e)),res);
    goto f1;
    end;
  if (a='length') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    pascal2string(BStr(stringLength(e)),res);
    goto f1;
    end;
  if (a='compare') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    pascal2string(BStr(stringCompare(e,f)),res);
    goto f1;
    end;
  if (a='equal') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    if (stringCompare(e,f)=0) then i:=1 else i:=0;
    pascal2string(BStr(i),res);
    goto f1;
    end;
  if (a='first') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    pascal2string(BStr(stringFind(e,f,0,1)),res);
    goto f1;
    end;
  if (a='last') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    pascal2string(BStr(stringFind(e,f,oneStringMaxSize,-1)),res);
    goto f1;
    end;
  if (a='map') then begin;
    executeOneCommand:=ps;
    if getCmdBlock(e,cmd,ps) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    p:=0;
    while (1=1) do begin;
      o:=p;
      i:=getNextWord(g,e,p,0);
      executeOneCommand:=i;if (i<>0) then exit;
      i:=getNextWord(h,e,p,0);
      executeOneCommand:=i;if (i<>0) then exit;
      if (g[1]=0) then break;
      i:=stringFind(g,f,0,1);
      if (i<0) then continue;
      p:=o;
      o:=stringLength(g);
      stringRange(g,f,1,i);
      stringAppend(g,h);
      stringRange(h,f,i+o+1,oneStringMaxSize);
      stringAppend(g,h);
      stringCopy(f,g);
      end;
    stringCopy(res,f);
    goto f1;
    end;
  if (a='range') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(g,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=BVal(string2pascal(f));
    o:=BVal(string2pascal(g));
    stringRange(res,e,i+1,o-i+1);
    goto f1;
    end;
  if (a='repeat') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    o:=BVal(string2pascal(f));
    if (o>oneStringMaxSize) then o:=oneStringMaxSize;
    stringClear(res);
    for i:=1 to o do stringAppend(res,e);
    goto f1;
    end;
  if (a='replace') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(f,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(g,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=getNextWord(h,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    i:=BVal(string2pascal(f));
    o:=BVal(string2pascal(g));
    stringRange(res,e,1,i);
    stringAppend(res,h);
    stringRange(f,e,o+2,oneStringMaxSize);
    stringAppend(res,f);
    goto f1;
    end;
  if (a='reverse') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringReverse(res,e);
    goto f1;
    end;
  if (a='tolower') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringLower(res,e);
    goto f1;
    end;
  if (a='toupper') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringUpper(res,e);
    goto f1;
    end;
  if (a='totitle') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringLower(res,e);
    stringUpper(f,e);
    res[1]:=f[1];
    goto f1;
    end;
  if (a='trim') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringTrimL(f,e);
    stringTrimR(res,f);
    goto f1;
    end;
  if (a='trimleft') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringTrimL(res,e);
    goto f1;
    end;
  if (a='trimright') then begin;
    i:=getNextWord(e,cmd,ps,0);
    executeOneCommand:=i;if (i<>0) then exit;
    stringTrimR(res,e);
    goto f1;
    end;
  executeOneCommand:=ps;
  exit;
  end;
if (a='proc') then begin;
  i:=getNextWord(e,cmd,ps,7);
  executeOneCommand:=i;if (i<>0) then exit;
  executeOneCommand:=ps;
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  executeOneCommand:=ps;
  if getCmdBlock(g,cmd,ps) then exit;
  a:=string2pascal(e);
  memoryPush(g,strTyp_prc,a);
  memoryPush(f,strTyp_par,a);
  stringClear(res);
  goto f1;
  end;
if (a='puts') then begin;
  i:=getNextWord(e,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  stringPrint(e,true);
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  stringClear(res);
  goto f1;
  end;
if (a='global') then begin;
  i:=getNextWord(e,cmd,ps,0);
  executeOneCommand:=i;if (i<>0) then exit;
  i:=testForEndOfLine(ps,cmd);
  executeOneCommand:=i;if (i<>0) then exit;
  a:=string2pascal(e);
  p:=memoryFindBackward(a,strTyp_var,0,currMemSiz);
  stringClear(res);
  memoryPush(res,strTyp_glb,a);
  if (p<0) then goto f1;
  memoryRead(e,p,i,a);
  memoryPush(e,strTyp_var,a);
  goto f1;
  end;
if (a='catch') then begin;
  executeOneCommand:=ps;
  if getCmdBlock(f,cmd,ps) then exit;
  case executeOneCommand(f) of
    0:i:=0;
    execBreak:i:=3;
    execRetrn:i:=0;
    else i:=1;
    end;
  pascal2string(BStr(i),res);
  goto f1;
  end;
if (a='error') then begin;
  executeOneCommand:=ps;
  exit;
  end;
if (a='exit') then begin;
  stringClear(res);
  halt(0);
  goto f1;
  end;
p:=memoryFindBackward(a,strTyp_prc,0,currMemSiz);
if (p<0) then exit;
inc(p,memoryRead(e,p,i,a));
inc(p,memoryRead(f,p,i,a));
executeOneCommand:=ps;
o:=currMemSiz;
p:=0;
while (1=1) do begin;
  i:=getNextWord(g,f,p,7);
  if (i<>0) then exit;
  a:=string2pascal(g);
  if (a='') then break;
  i:=getNextWord(g,cmd,ps,0);
  if (i<>0) then exit;
  memoryPush(g,strTyp_var,a);
  end;
p:=currProcOfs;
currProcOfs:=o;
stringCopy(res,e);
i:=executeOneCommand(res);
o:=currMemSiz;
currMemSiz:=currProcOfs;
currProcOfs:=p;
p:=o;
executeOneCommand:=ps;
case i of
  0:;
  execRetrn:;
  else exit;
  end;
o:=currMemSiz;
while (1=1) do begin;
  if (o<0) then break;
  o:=memoryFindForeward('',strTyp_glb+strTyp_non,o,p);
  if (o<0) then break;
  inc(o,memoryRead(e,o,i,a));
  i:=memoryFindBackward(a,strTyp_var,o,p);
  if (i<0) then continue;
  memoryRead(e,i,i,a);
  o:=memoryFindForeward('',strTyp_glb+strTyp_non,o,p);
  inc(currMemSiz,memoryWrite(e,currMemSiz,strTyp_var,a));
  if (o>=0) then if (currMemSiz>o) then exit;
  end;
goto f1;
End;
