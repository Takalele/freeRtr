the system calls in BugOS are identified by a number...
note that every strings in this document are prefixed
with size byte, and does NOT terminate with zero character...
the way the system calls are invoked is the following:
syscall 0                       ;coded as: 00h,00h,00h,0ch
the function number must be in t0 register...
some calls require privileges...
here is the list of privileges:
*1 - privileged flag (rights and 40h<>0)

here is the list of system calls:

00000000h - terminate process...
            in: t1-exit code to return to caller...

00000001h - give away the control...

00000002h - give away the control... *1
            in: t1-process number to give...

00000003h - map system memory... *1
            in: t1-physical memory offset...
                t2-bytes to map in...
           out: t0-error code...
                t1-offset where mapped...
                t2-physical memory offset...
                t3-bytes mapped in...

00000004h - hook irq line... *1
            in: t1-irq number: 0..7...
                t2-offset of handler...
           out: t0-error code...

00000005h - unhook irq line...
            in: t1-irq number: 0..7...

00000006h - terminate irq handler...

00000007h - get total memory info...
           out: t0-total memory in 8k pages...
                t1-kernel allocated memory in pages...
                t2-unused memory in pages...

00000008h - get total system info...
           out: t0-number of processes...
                t1-number of pipelines...
                t2-number of open files...

00000009h - get other process info...
            in: t1-process id...
           out: t0-number of pages allocated...
                t1-number of pipelines...
                t2-number of open files...

0000000Ah - get other process name...
            in: t1-process id...
                t2-where to save process pathname and parameter...
           out: t0-user id...
                t1-parent process id...
                t2-rights...

0000000Bh - find process by number...
            in: t1-process sequence number: 0..max-1...
           out: t0-process id /0=error...

0000000Ch - find process by name...
            in: t1-process name to find...
           out: t0-process id /0=error...

0000000Dh - kill another process... *1
            in: t1-process id...

0000000Eh - get current process info...
           out: t0-process id...
                t1-parent process id...
                t2-rights...

0000000Fh - get current user info...
           out: t0-current user id...
                t1-original user id...

00000010h - set user info... *1
            in: t1-user id...

00000011h - get process pathname...
            in: t1-where to copy data...

00000012h - get process parameters...
            in: t1-where to copy data...

00000013h - start listening...
           out: t0-error code...

00000014h - stop listening...
           out: t0-error code...

00000015h - get next incoming pipeline...
           out: t0-error code...
                t1-new pipeline id...

00000016h - create new pipeline...
            in: t1-process id...
                t2-size in bytes...
                t3-block mode pipe...
           out: t0-error code...
                t1-new pipeline id...

00000017h - close pipeline side...
            in: t1-pipeline id...
           out: t0-error code...

00000018h - get pipeline info...
            in: t1-pipeline id...
           out: t0-error code...
                t1-process id of remote...
                t2-bytes free in tx buffer...
                t3-bytes waiting in rx buffer...

00000019h - nonblocking send through pipeline...
            in: t1-pipeline id...
                t2-buffer to send...
                t3-bytes in buffer...
           out: t0-error code...

0000001Ah - nonblocking receive through pipeline...
            in: t1-pipeline id...
                t2-buffer to receive...
                t3-max bytes to receive...
           out: t0-error code...
                t1-bytes received...

0000001Bh - get cpu info...
            in: t1-cpu number: 0..max-1...
                t2-where to get text in AsciiZ format...
           out: t0-number of processors...
                t1-cpu chip code...

0000001Ch - get kernel info...
            in: t1-where to get text in AsciiZ format...

0000001Dh - get kernel logo...
            in: t1-where to get text in AsciiZ format...

0000001Eh - get console status...
           out: t0-bytes free in tx buffer...
                t1-bytes waiting in rx buffer...

0000001Fh - write to console...
            in: t1-buffer to write...
                t2-bytes in buffer...

00000020h - read from console...
            in: t1-buffer to read to...
                t2-bytes to read...
           out: t0-bytes readed...

00000021h - check for process existence...
            in: t1-process id...
           out: t0-result: 0=no, 1=yes...

00000022h - get extended memory info...
           out: t0-size of extended memory in bytes...
                t1-offset of extended memory...

00000023h - resize extended memory...
            in: t1-new size of extended memory in bytes...
           out: t0-size of extended memory in bytes...
                t1-offset of extended memory...

00000024h - allocate continuous memory... *1
            in: t1-size of continuous memory in bytes...
           out: t0-error code...
                t1-size of continuous memory in bytes...
                t2-offset of continuous memory...
                t3-physical memory offset...

00000025h - get uptime info...
           out: t0-days since running...
                t1-ticks since last day change...
                t2-ticks per second...

00000026h - get uptime info...
           out: t0-ticks since last day change...

00000027h - get system date...
           out: t0-year...
                t1-month...
                t2-day...

00000028h - get system time...
           out: t0-hour...
                t1-minute...
                t2-second...

00000029h - login as drive letter... *1
            in: t1-drive letter...
                t2-buffer offset...
           out: t0-error code...

0000002Ah - logout as drive letter... *1
            in: t1-drive letter...
           out: t0-error code...

0000002Bh - get current directory...
            in: t1-where to copy current directory pathname...

0000002Ch - get number of missed irqs...
           out: t0-number of missed irqs...

0000002Dh - drop privileged flag...

0000002Eh - get data offset...
           out: t0-offset of data block...

0000002Fh - terminate drive handler...

00000030h - change current directory...
            in: t1-pathname of directory to change to...
           out: t0-error code...

00000031h - create directory...
            in: t1-pathname of new directory to create...
           out: t0-error code...

00000032h - erase directory...
            in: t1-pathname of directory to erase...
           out: t0-error code...

00000033h - create file...
            in: t1-pathname of new file to create...
           out: t0-error code...

00000034h - erase file...
            in: t1-pathname of file to erase...
           out: t0-error code...

00000035h - rename dir entry...
            in: t1-pathname of source entry...
                t2-pathname of target entry...
           out: t0-error code...

00000036h - make link to entry...
            in: t1-pathname of source entry...
                t2-pathname of target entry...
           out: t0-error code...

00000037h - set rights of entry...
            in: t1-pathname of file to affect...
                t2-rights to set...
                t3-owner to set...
           out: t0-error code...
          note: rights are the following:
                1h-readOwn, 2h-WriteOwn, 4h-execOwn,
                8h-readAny, 10h-writeAny, 20h-execAny,
                40h-hasRootPrivs, 80h-directory,
                100h-allowRead, 200h-allowWrite...

00000038h - set dates of entry...
            in: t1-pathname of file to affect...
                t2-offset to create,modify time...
           out: t0-error code...
          note: time has the following format:
                year:word
                month,day,hour,min,sec:byte

00000039h - get current drive statistics...
           out: t0-error code...
                t1-free blocks...
                t2-used blocks...
                t3-bad blocks...
                t4-block size in bytes...

0000003Ah - open directory...
            in: t1-pathname of directory...
           out: t0-error code...
                t1-handler of open directory...

0000003Bh - read directory...
            in: t1-handler of open directory...
                t2-where to get data...
           out: t0-error code...
          note: the data has the following structure:
                size,rights,owner:dword
                create,modify:time
                name:string[255]

0000003Ch - close directory...
            in: t1-handler of open directory...
           out: t0-error code...

0000003Dh - open file...
            in: t1-pathname of file...
                t2-access rights...
           out: t0-error code...
                t1-handler of open file...

0000003Eh - read from file...
            in: t1-handler of open file...
                t2-offset where to read...
                t3-bytes to read...
           out: t0-error code...

0000003Fh - write to file...
            in: t1-handler of open file...
                t2-offset where from write...
                t3-bytes to write...
           out: t0-error code...

00000040h - seek in file...
            in: t1-handler of open file...
                t2-position where to seek...
           out: t0-error code...

00000041h - get file size...
            in: t1-handler of open file...
           out: t0-error code...
                t1-size of file in bytes...

00000042h - get file position...
            in: t1-handler of open file...
           out: t0-error code...
                t1-file position...

00000043h - truncate file...
            in: t1-handler of open file...
           out: t0-error code...

00000044h - close file...
            in: t1-handler of open file...
           out: t0-error code...

00000045h - execute and wait...
            in: t1-pathname of file...
                t2-parameters to give...
           out: t0-error code...
                t1-exit code returned by process at successful termination...

00000046h - execute in background... *1
            in: t1-pathname of file...
                t2-parameters to give...
           out: t0-error code...
                t1-new process id...

00000047h - execute inside me... *1
            in: t1-pathname of file...
                t2-parameters to give...
           out: t0-error code...
                t1-new process id...
                t2-pipeline id of process's console...

00000048h - get system performance counters...
           out: t0-idle cycles executed...
                t1-rounds executed...
                t2-full rounds executed...
                t3-active processes started...

00000049h - get other process info...
            in: t1-process id...
           out: t0-working since ticks...
                t1-times process executed...
