when a process wants to present a drive, first it selects a
communication area, after logs into the kernel...
it servers the requests, and when it wants to stop presenting
drive, it logs out...
the serving is very simple: monitors for command... when the
highest bit is set, there is a command... it processes the command,
stores data, and signs 'terminate drive handler'...

drive communication block layout:
command/result  dword
userID          dword
rights          dword
size            dword
currDir         string
fileName1       string
fileName2       string
handler         array[1..512] of byte
data            array[1..65536] of byte

list of commands:
80000001h - change directory: dir, fn1, usrID...
80000002h - drive statistics: data: free,used,bad,blockSize:dword...
80000003h - create directory: dir, fn1, usrID...
80000004h - erase directory: dir, fn1, usrID...
80000005h - create file: dir, fn1, usrID...
80000006h - erase file: dir, fn1, usrID...
80000007h - rename: dir, fn1, fn2, usrID...
80000008h - make link: dir, fn1, fn2, usrID...
80000009h - set rights: dir, fn1, usrID, data: rights,owner:dword...
8000000Ah - set date: dir, fn1, usrID, data: create,modify:time...
8000000Bh - open directory: dir, fn1, usrID, hdr, data: inode,rights:dword; name:string...
8000000Ch - read directory: hdr, data: size,right,own:dword; create,modify:time; name:string...
8000000Dh - open file: dir, fn1, right, usrID, hdr, data: inode,rights:dword; name:string...
8000000Eh - read file: hdr, size, data...
8000000Fh - write file: hdr, size, data...
80000010h - seek file: hdr, data: position:dword...
80000011h - get file size: hdr, data: filesize:dword...
80000012h - get file pos: hdr, data: position:dword...
80000013h - truncate file: hdr...
